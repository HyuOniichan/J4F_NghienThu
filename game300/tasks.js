export const tasks =
[
    //difficult: easy
    [
        {index: 0, link: "https://leetcode.com/problems/two-sum", name: "two sum", tag: "Array   Hash Table", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 1, link: "https://leetcode.com/problems/maximum-subarray", name: "maximum subarray", tag: "Array   Divide and Conquer   Dynamic Programming", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 2, link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock", name: "best time to buy and sell stock", tag: "Array   Dynamic Programming", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 3, link: "https://leetcode.com/problems/valid-parentheses", name: "valid parentheses", tag: "String   Stack", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 4, link: "https://leetcode.com/problems/reverse-linked-list", name: "reverse linked list", tag: "Linked List   Recursion", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 5, link: "https://leetcode.com/problems/merge-two-sorted-lists", name: "merge two sorted lists", tag: "Linked List   Recursion", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 6, link: "https://leetcode.com/problems/climbing-stairs", name: "climbing stairs", tag: "Math   Dynamic Programming   Memoization", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 7, link: "https://leetcode.com/problems/symmetric-tree", name: "symmetric tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 8, link: "https://leetcode.com/problems/single-number", name: "single number", tag: "Array   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 9, link: "https://leetcode.com/problems/move-zeroes", name: "move zeroes", tag: "Array   Two Pointers", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 10, link: "https://leetcode.com/problems/intersection-of-two-linked-lists", name: "intersection of two linked lists", tag: "Hash Table   Linked List   Two Pointers", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 11, link: "https://leetcode.com/problems/majority-element", name: "majority element", tag: "Array   Hash Table   Divide and Conquer   Sorting   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},      
        {index: 12, link: "https://leetcode.com/problems/palindrome-linked-list", name: "palindrome linked list", tag: "Linked List   Two Pointers   Stack   Recursion", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},        
        {index: 13, link: "https://leetcode.com/problems/invert-binary-tree", name: "invert binary tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 14, link: "https://leetcode.com/problems/min-stack", name: "min stack", tag: "Stack   Design", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 15, link: "https://leetcode.com/problems/diameter-of-binary-tree", name: "diameter of binary tree", tag: "Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 16, link: "https://leetcode.com/problems/binary-tree-inorder-traversal", name: "binary tree inorder traversal", tag: "Stack   Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 17, link: "https://leetcode.com/problems/linked-list-cycle", name: "linked list cycle", tag: "Hash Table   Linked List   Two Pointers", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 18, link: "https://leetcode.com/problems/longest-common-prefix", name: "longest common prefix", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 19, link: "https://leetcode.com/problems/search-insert-position", name: "search insert position", tag: "Array   Binary Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 20, link: "https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array", name: "find all numbers disappeared in an array", tag: "Array   Hash Table", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 21, link: "https://leetcode.com/problems/merge-two-binary-trees", name: "merge two binary trees", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 22, link: "https://leetcode.com/problems/maximum-depth-of-binary-tree", name: "maximum depth of binary tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 23, link: "https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree", name: "convert sorted array to binary search tree", tag: "Array   Divide and Conquer   Tree   Binary Search Tree   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 24, link: "https://leetcode.com/problems/remove-duplicates-from-sorted-array", name: "remove duplicates from sorted array", tag: "Array   Two Pointers", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},        
        {index: 25, link: "https://leetcode.com/problems/counting-bits", name: "counting bits", tag: "Dynamic Programming   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 26, link: "https://leetcode.com/problems/min-cost-climbing-stairs", name: "min cost climbing stairs", tag: "Array   Dynamic Programming", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 27, link: "https://leetcode.com/problems/balanced-binary-tree", name: "balanced binary tree", tag: "Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 28, link: "https://leetcode.com/problems/palindrome-number", name: "palindrome number", tag: "Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 29, link: "https://leetcode.com/problems/same-tree", name: "same tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 30, link: "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree", name: "lowest common ancestor of a binary search tree", tag: "Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 31, link: "https://leetcode.com/problems/path-sum", name: "path sum", tag: "Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 32, link: "https://leetcode.com/problems/subtree-of-another-tree", name: "subtree of another tree", tag: "Tree   Depth-First Search   String Matching   Binary Tree   Hash Function", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 33, link: "https://leetcode.com/problems/missing-number", name: "missing number", tag: "Array   Hash Table   Math   Bit Manipulation   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 34, link: "https://leetcode.com/problems/pascals-triangle", name: "pascals triangle", tag: "Array   Dynamic Programming", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 35, link: "https://leetcode.com/problems/happy-number", name: "happy number", tag: "Hash Table   Math   Two Pointers", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 36, link: "https://leetcode.com/problems/middle-of-the-linked-list", name: "middle of the linked list", tag: "Linked List   Two Pointers", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 37, link: "https://leetcode.com/problems/two-sum-ii-input-array-is-sorted", name: "two sum ii input array is sorted", tag: "Array   Two Pointers   Binary Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 38, link: "https://leetcode.com/problems/first-unique-character-in-a-string", name: "first unique character in a string", tag: "Hash Table   String   Queue   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 39, link: "https://leetcode.com/problems/squares-of-a-sorted-array", name: "squares of a sorted array", tag: "Array   Two Pointers   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 40, link: "https://leetcode.com/problems/remove-linked-list-elements", name: "remove linked list elements", tag: "Linked List   Recursion", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 41, link: "https://leetcode.com/problems/island-perimeter", name: "island perimeter", tag: "Array   Depth-First Search   Breadth-First Search   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},        
        {index: 42, link: "https://leetcode.com/problems/remove-duplicates-from-sorted-list", name: "remove duplicates from sorted list", tag: "Linked List", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 43, link: "https://leetcode.com/problems/add-binary", name: "add binary", tag: "Math   String   Bit Manipulation   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 44, link: "https://leetcode.com/problems/valid-anagram", name: "valid anagram", tag: "Hash Table   String   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 45, link: "https://leetcode.com/problems/first-bad-version", name: "first bad version", tag: "Binary Search   Interactive", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 46, link: "https://leetcode.com/problems/valid-palindrome-ii", name: "valid palindrome ii", tag: "Two Pointers   String   Greedy", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 47, link: "https://leetcode.com/problems/delete-node-in-a-linked-list", name: "delete node in a linked list", tag: "Linked List", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 48, link: "https://leetcode.com/problems/intersection-of-two-arrays-ii", name: "intersection of two arrays ii", tag: "Array   Hash Table   Two Pointers   Binary Search   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 49, link: "https://leetcode.com/problems/reverse-string", name: "reverse string", tag: "Two Pointers   String   Recursion", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 50, link: "https://leetcode.com/problems/range-sum-of-bst", name: "range sum of bst", tag: "Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},      
        {index: 51, link: "https://leetcode.com/problems/binary-tree-postorder-traversal", name: "binary tree postorder traversal", tag: "Stack   Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 52, link: "https://leetcode.com/problems/is-subsequence", name: "is subsequence", tag: "Two Pointers   String   Dynamic Programming", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 53, link: "https://leetcode.com/problems/binary-tree-paths", name: "binary tree paths", tag: "String   Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 54, link: "https://leetcode.com/problems/minimum-depth-of-binary-tree", name: "minimum depth of binary tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 55, link: "https://leetcode.com/problems/binary-tree-preorder-traversal", name: "binary tree preorder traversal", tag: "Stack   Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 56, link: "https://leetcode.com/problems/plus-one", name: "plus one", tag: "Array   Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 57, link: "https://leetcode.com/problems/backspace-string-compare", name: "backspace string compare", tag: "Two Pointers   String   Stack   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},        
        {index: 58, link: "https://leetcode.com/problems/implement-strstr", name: "implement strstr", tag: "Two Pointers   String   String Matching", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 59, link: "https://leetcode.com/problems/contains-duplicate", name: "contains duplicate", tag: "Array   Hash Table   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 60, link: "https://leetcode.com/problems/jewels-and-stones", name: "jewels and stones", tag: "Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 61, link: "https://leetcode.com/problems/flood-fill", name: "flood fill", tag: "Array   Depth-First Search   Breadth-First Search   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 62, link: "https://leetcode.com/problems/two-sum-iv-input-is-a-bst", name: "two sum iv input is a bst", tag: "Hash Table   Two Pointers   Tree   Depth-First Search   Breadth-First Search   Binary Search Tree   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 63, link: "https://leetcode.com/problems/sqrtx", name: "sqrtx", tag: "Math   Binary Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 64, link: "https://leetcode.com/problems/isomorphic-strings", name: "isomorphic strings", tag: "Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 65, link: "https://leetcode.com/problems/binary-search", name: "binary search", tag: "Array   Binary Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 66, link: "https://leetcode.com/problems/repeated-substring-pattern", name: "repeated substring pattern", tag: "String   String Matching", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 67, link: "https://leetcode.com/problems/remove-element", name: "remove element", tag: "Array   Two Pointers", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 68, link: "https://leetcode.com/problems/sum-of-left-leaves", name: "sum of left leaves", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 69, link: "https://leetcode.com/problems/hamming-distance", name: "hamming distance", tag: "Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 70, link: "https://leetcode.com/problems/valid-palindrome", name: "valid palindrome", tag: "Two Pointers   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 71, link: "https://leetcode.com/problems/add-strings", name: "add strings", tag: "Math   String   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 72, link: "https://leetcode.com/problems/implement-queue-using-stacks", name: "implement queue using stacks", tag: "Stack   Design   Queue", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 73, link: "https://leetcode.com/problems/roman-to-integer", name: "roman to integer", tag: "Hash Table   Math   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 74, link: "https://leetcode.com/problems/find-the-town-judge", name: "find the town judge", tag: "Array   Hash Table   Graph", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 75, link: "https://leetcode.com/problems/merge-sorted-array", name: "merge sorted array", tag: "Array   Two Pointers   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 76, link: "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string", name: "remove all adjacent duplicates in string", tag: "String   Stack", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},    
        {index: 77, link: "https://leetcode.com/problems/average-of-levels-in-binary-tree", name: "average of levels in binary tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 78, link: "https://leetcode.com/problems/find-pivot-index", name: "find pivot index", tag: "Array   Prefix Sum", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 79, link: "https://leetcode.com/problems/how-many-numbers-are-smaller-than-the-current-number", name: "how many numbers are smaller than the current number", tag: "Array   Hash Table   Sorting   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 80, link: "https://leetcode.com/problems/power-of-two", name: "power of two", tag: "Math   Bit Manipulation   Recursion", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 81, link: "https://leetcode.com/problems/fibonacci-number", name: "fibonacci number", tag: "Math   Dynamic Programming   Recursion   Memoization", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 82, link: "https://leetcode.com/problems/reverse-bits", name: "reverse bits", tag: "Divide and Conquer   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 83, link: "https://leetcode.com/problems/word-pattern", name: "word pattern", tag: "Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 84, link: "https://leetcode.com/problems/verifying-an-alien-dictionary", name: "verifying an alien dictionary", tag: "Array   Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 85, link: "https://leetcode.com/problems/cousins-in-binary-tree", name: "cousins in binary tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 86, link: "https://leetcode.com/problems/count-binary-substrings", name: "count binary substrings", tag: "Two Pointers   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 87, link: "https://leetcode.com/problems/sort-array-by-parity", name: "sort array by parity", tag: "Array   Two Pointers   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 88, link: "https://leetcode.com/problems/number-of-1-bits", name: "number of 1 bits", tag: "Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 89, link: "https://leetcode.com/problems/maximum-product-of-three-numbers", name: "maximum product of three numbers", tag: "Array   Math   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 90, link: "https://leetcode.com/problems/excel-sheet-column-title", name: "excel sheet column title", tag: "Math   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 91, link: "https://leetcode.com/problems/intersection-of-two-arrays", name: "intersection of two arrays", tag: "Array   Hash Table   Two Pointers   Binary Search   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 92, link: "https://leetcode.com/problems/longest-palindrome", name: "longest palindrome", tag: "Hash Table   String   Greedy", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 93, link: "https://leetcode.com/problems/search-in-a-binary-search-tree", name: "search in a binary search tree", tag: "Tree   Binary Search Tree   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 94, link: "https://leetcode.com/problems/reverse-words-in-a-string-iii", name: "reverse words in a string iii", tag: "Two Pointers   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 95, link: "https://leetcode.com/problems/excel-sheet-column-number", name: "excel sheet column number", tag: "Math   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 96, link: "https://leetcode.com/problems/design-hashmap", name: "design hashmap", tag: "Array   Hash Table   Linked List   Design   Hash Function", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 97, link: "https://leetcode.com/problems/convert-binary-number-in-a-linked-list-to-integer", name: "convert binary number in a linked list to integer", tag: "Linked List   Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 98, link: "https://leetcode.com/problems/max-consecutive-ones", name: "max consecutive ones", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 99, link: "https://leetcode.com/problems/running-sum-of-1d-array", name: "running sum of 1d array", tag: "Array   Prefix Sum", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 100, link: "https://leetcode.com/problems/pascals-triangle-ii", name: "pascals triangle ii", tag: "Array   Dynamic Programming", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 101, link: "https://leetcode.com/problems/increasing-order-search-tree", name: "increasing order search tree", tag: "Stack   Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 102, link: "https://leetcode.com/problems/find-common-characters", name: "find common characters", tag: "Array   Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 103, link: "https://leetcode.com/problems/shortest-distance-to-a-character", name: "shortest distance to a character", tag: "Array   Two Pointers   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},    
        {index: 104, link: "https://leetcode.com/problems/can-place-flowers", name: "can place flowers", tag: "Array   Greedy", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 105, link: "https://leetcode.com/problems/contains-duplicate-ii", name: "contains duplicate ii", tag: "Array   Hash Table   Sliding Window", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 106, link: "https://leetcode.com/problems/number-of-good-pairs", name: "number of good pairs", tag: "Array   Hash Table   Math   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 107, link: "https://leetcode.com/problems/shuffle-the-array", name: "shuffle the array", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 108, link: "https://leetcode.com/problems/kth-missing-positive-number", name: "kth missing positive number", tag: "Array   Binary Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 109, link: "https://leetcode.com/problems/peak-index-in-a-mountain-array", name: "peak index in a mountain array", tag: "Array   Binary Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 110, link: "https://leetcode.com/problems/find-mode-in-binary-search-tree", name: "find mode in binary search tree", tag: "Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 111, link: "https://leetcode.com/problems/last-stone-weight", name: "last stone weight", tag: "Array   Heap (Priority Queue)", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 112, link: "https://leetcode.com/problems/number-complement", name: "number complement", tag: "Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 113, link: "https://leetcode.com/problems/valid-perfect-square", name: "valid perfect square", tag: "Math   Binary Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 114, link: "https://leetcode.com/problems/arranging-coins", name: "arranging coins", tag: "Math   Binary Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 115, link: "https://leetcode.com/problems/flipping-an-image", name: "flipping an image", tag: "Array   Two Pointers   Matrix   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 116, link: "https://leetcode.com/problems/kth-largest-element-in-a-stream", name: "kth largest element in a stream", tag: "Tree   Design   Binary Search Tree   Heap (Priority Queue)   Binary Tree   Data Stream", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 117, link: "https://leetcode.com/problems/maximum-depth-of-n-ary-tree", name: "maximum depth of n ary tree", tag: "Tree   Depth-First Search   Breadth-First Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 118, link: "https://leetcode.com/problems/degree-of-an-array", name: "degree of an array", tag: "Array   Hash Table", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 119, link: "https://leetcode.com/problems/find-the-difference", name: "find the difference", tag: "Hash Table   String   Bit Manipulation   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 120, link: "https://leetcode.com/problems/minimum-absolute-difference-in-bst", name: "minimum absolute difference in bst", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Search Tree   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 121, link: "https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix", name: "count negative numbers in a sorted matrix", tag: "Array   Binary Search   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 122, link: "https://leetcode.com/problems/reshape-the-matrix", name: "reshape the matrix", tag: "Array   Matrix   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 123, link: "https://leetcode.com/problems/toeplitz-matrix", name: "toeplitz matrix", tag: "Array   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 124, link: "https://leetcode.com/problems/range-sum-query-immutable", name: "range sum query immutable", tag: "Array   Design   Prefix Sum", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 125, link: "https://leetcode.com/problems/implement-stack-using-queues", name: "implement stack using queues", tag: "Stack   Design   Queue", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 126, link: "https://leetcode.com/problems/next-greater-element-i", name: "next greater element i", tag: "Array   Hash Table   Stack   Monotonic Stack", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 127, link: "https://leetcode.com/problems/sum-of-root-to-leaf-binary-numbers", name: "sum of root to leaf binary numbers", tag: "Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 128, link: "https://leetcode.com/problems/set-mismatch", name: "set mismatch", tag: "Array   Hash Table   Bit Manipulation   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 129, link: "https://leetcode.com/problems/rotate-string", name: "rotate string", tag: "String   String Matching", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 130, link: "https://leetcode.com/problems/unique-email-addresses", name: "unique email addresses", tag: "Array   Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 131, link: "https://leetcode.com/problems/sort-array-by-parity-ii", name: "sort array by parity ii", tag: "Array   Two Pointers   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 132, link: "https://leetcode.com/problems/robot-return-to-origin", name: "robot return to origin", tag: "String   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 133, link: "https://leetcode.com/problems/longest-continuous-increasing-subsequence", name: "longest continuous increasing subsequence", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 134, link: "https://leetcode.com/problems/split-a-string-in-balanced-strings", name: "split a string in balanced strings", tag: "String   Greedy   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},   
        {index: 135, link: "https://leetcode.com/problems/add-digits", name: "add digits", tag: "Math   Simulation   Number Theory", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 136, link: "https://leetcode.com/problems/di-string-match", name: "di string match", tag: "Array   Math   Two Pointers   String   Greedy", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 137, link: "https://leetcode.com/problems/leaf-similar-trees", name: "leaf similar trees", tag: "Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 138, link: "https://leetcode.com/problems/sum-of-all-odd-length-subarrays", name: "sum of all odd length subarrays", tag: "Array   Math   Prefix Sum", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 139, link: "https://leetcode.com/problems/reorder-data-in-log-files", name: "reorder data in log files", tag: "Array   String   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 140, link: "https://leetcode.com/problems/relative-sort-array", name: "relative sort array", tag: "Array   Hash Table   Sorting   Counting Sort", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 141, link: "https://leetcode.com/problems/binary-tree-tilt", name: "binary tree tilt", tag: "Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 142, link: "https://leetcode.com/problems/n-ary-tree-preorder-traversal", name: "n ary tree preorder traversal", tag: "Stack   Tree   Depth-First Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},      
        {index: 143, link: "https://leetcode.com/problems/third-maximum-number", name: "third maximum number", tag: "Array   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 144, link: "https://leetcode.com/problems/minimum-distance-between-bst-nodes", name: "minimum distance between bst nodes", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Search Tree   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 145, link: "https://leetcode.com/problems/longest-harmonious-subsequence", name: "longest harmonious subsequence", tag: "Array   Hash Table   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 146, link: "https://leetcode.com/problems/long-pressed-name", name: "long pressed name", tag: "Two Pointers   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 147, link: "https://leetcode.com/problems/duplicate-zeros", name: "duplicate zeros", tag: "Array   Two Pointers", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 148, link: "https://leetcode.com/problems/ransom-note", name: "ransom note", tag: "Hash Table   String   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 149, link: "https://leetcode.com/problems/n-ary-tree-postorder-traversal", name: "n ary tree postorder traversal", tag: "Stack   Tree   Depth-First Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},    
        {index: 150, link: "https://leetcode.com/problems/reverse-vowels-of-a-string", name: "reverse vowels of a string", tag: "Two Pointers   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 151, link: "https://leetcode.com/problems/maximum-average-subarray-i", name: "maximum average subarray i", tag: "Array   Sliding Window", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 152, link: "https://leetcode.com/problems/number-of-steps-to-reduce-a-number-to-zero", name: "number of steps to reduce a number to zero", tag: "Math   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 153, link: "https://leetcode.com/problems/n-th-tribonacci-number", name: "n th tribonacci number", tag: "Math   Dynamic Programming   Memoization", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 154, link: "https://leetcode.com/problems/the-k-weakest-rows-in-a-matrix", name: "the k weakest rows in a matrix", tag: "Array   Binary Search   Sorting   Heap (Priority Queue)   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 155, link: "https://leetcode.com/problems/valid-mountain-array", name: "valid mountain array", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 156, link: "https://leetcode.com/problems/reverse-only-letters", name: "reverse only letters", tag: "Two Pointers   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 157, link: "https://leetcode.com/problems/monotonic-array", name: "monotonic array", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 158, link: "https://leetcode.com/problems/minimum-absolute-difference", name: "minimum absolute difference", tag: "Array   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 159, link: "https://leetcode.com/problems/summary-ranges", name: "summary ranges", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 160, link: "https://leetcode.com/problems/minimum-cost-to-move-chips-to-the-same-position", name: "minimum cost to move chips to the same position", tag: "Array   Math   Greedy", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 161, link: "https://leetcode.com/problems/rectangle-overlap", name: "rectangle overlap", tag: "Math   Geometry", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 162, link: "https://leetcode.com/problems/buddy-strings", name: "buddy strings", tag: "Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 163, link: "https://leetcode.com/problems/kids-with-the-greatest-number-of-candies", name: "kids with the greatest number of candies", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 164, link: "https://leetcode.com/problems/power-of-four", name: "power of four", tag: "Math   Bit Manipulation   Recursion", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 165, link: "https://leetcode.com/problems/maximum-units-on-a-truck", name: "maximum units on a truck", tag: "Array   Greedy   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 166, link: "https://leetcode.com/problems/construct-string-from-binary-tree", name: "construct string from binary tree", tag: "String   Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 167, link: "https://leetcode.com/problems/assign-cookies", name: "assign cookies", tag: "Array   Greedy   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 168, link: "https://leetcode.com/problems/find-smallest-letter-greater-than-target", name: "find smallest letter greater than target", tag: "Array   Binary Search", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 169, link: "https://leetcode.com/problems/most-common-word", name: "most common word", tag: "Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 170, link: "https://leetcode.com/problems/ugly-number", name: "ugly number", tag: "Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 171, link: "https://leetcode.com/problems/consecutive-characters", name: "consecutive characters", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 172, link: "https://leetcode.com/problems/univalued-binary-tree", name: "univalued binary tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 173, link: "https://leetcode.com/problems/divisor-game", name: "divisor game", tag: "Math   Dynamic Programming   Brainteaser   Game Theory", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 174, link: "https://leetcode.com/problems/unique-morse-code-words", name: "unique morse code words", tag: "Array   Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 175, link: "https://leetcode.com/problems/remove-outermost-parentheses", name: "remove outermost parentheses", tag: "String   Stack", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 176, link: "https://leetcode.com/problems/greatest-common-divisor-of-strings", name: "greatest common divisor of strings", tag: "Math   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 177, link: "https://leetcode.com/problems/x-of-a-kind-in-a-deck-of-cards", name: "x of a kind in a deck of cards", tag: "Array   Hash Table   Math   Counting   Number Theory", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 178, link: "https://leetcode.com/problems/unique-number-of-occurrences", name: "unique number of occurrences", tag: "Array   Hash Table", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 179, link: "https://leetcode.com/problems/shuffle-string", name: "shuffle string", tag: "Array   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 180, link: "https://leetcode.com/problems/minimum-time-visiting-all-points", name: "minimum time visiting all points", tag: "Array   Math   Geometry", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 181, link: "https://leetcode.com/problems/fair-candy-swap", name: "fair candy swap", tag: "Array   Hash Table   Binary Search   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 182, link: "https://leetcode.com/problems/design-hashset", name: "design hashset", tag: "Array   Hash Table   Linked List   Design   Hash Function", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 183, link: "https://leetcode.com/problems/lemonade-change", name: "lemonade change", tag: "Array   Greedy", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 184, link: "https://leetcode.com/problems/second-minimum-node-in-a-binary-tree", name: "second minimum node in a binary tree", tag: "Tree   Depth-First Search   Binary Tree", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 185, link: "https://leetcode.com/problems/replace-elements-with-greatest-element-on-right-side", name: "replace elements with greatest element on right side", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 186, link: "https://leetcode.com/problems/self-dividing-numbers", name: "self dividing numbers", tag: "Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 187, link: "https://leetcode.com/problems/minimum-index-sum-of-two-lists", name: "minimum index sum of two lists", tag: "Array   Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 188, link: "https://leetcode.com/problems/find-numbers-with-even-number-of-digits", name: "find numbers with even number of digits", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 189, link: "https://leetcode.com/problems/sort-array-by-increasing-frequency", name: "sort array by increasing frequency", tag: "Array   Hash Table   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10}, 
        {index: 190, link: "https://leetcode.com/problems/richest-customer-wealth", name: "richest customer wealth", tag: "Array   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 191, link: "https://leetcode.com/problems/detect-capital", name: "detect capital", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 192, link: "https://leetcode.com/problems/transpose-matrix", name: "transpose matrix", tag: "Array   Matrix   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 193, link: "https://leetcode.com/problems/partition-array-into-three-parts-with-equal-sum", name: "partition array into three parts with equal sum", tag: "Array   Greedy", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 194, link: "https://leetcode.com/problems/nim-game", name: "nim game", tag: "Math   Brainteaser   Game Theory", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 195, link: "https://leetcode.com/problems/add-to-array-form-of-integer", name: "add to array form of integer", tag: "Array   Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 196, link: "https://leetcode.com/problems/defanging-an-ip-address", name: "defanging an ip address", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 197, link: "https://leetcode.com/problems/minimum-value-to-get-positive-step-by-step-sum", name: "minimum value to get positive step by step sum", tag: "Array   Prefix Sum", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 198, link: "https://leetcode.com/problems/baseball-game", name: "baseball game", tag: "Array   Stack   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 199, link: "https://leetcode.com/problems/to-lower-case", name: "to lower case", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 200, link: "https://leetcode.com/problems/maximum-number-of-balloons", name: "maximum number of balloons", tag: "Hash Table   String   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 201, link: "https://leetcode.com/problems/find-n-unique-integers-sum-up-to-zero", name: "find n unique integers sum up to zero", tag: "Array   Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 202, link: "https://leetcode.com/problems/binary-watch", name: "binary watch", tag: "Backtracking   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 203, link: "https://leetcode.com/problems/distribute-candies", name: "distribute candies", tag: "Array   Hash Table", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 204, link: "https://leetcode.com/problems/find-words-that-can-be-formed-by-characters", name: "find words that can be formed by characters", tag: "Array   Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 205, link: "https://leetcode.com/problems/maximum-69-number", name: "maximum 69 number", tag: "Math   Greedy", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 206, link: "https://leetcode.com/problems/destination-city", name: "destination city", tag: "Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 207, link: "https://leetcode.com/problems/subtract-the-product-and-sum-of-digits-of-an-integer", name: "subtract the product and sum of digits of an integer", tag: "Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 208, link: "https://leetcode.com/problems/create-target-array-in-the-given-order", name: "create target array in the given order", tag: "Array   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},   
        {index: 209, link: "https://leetcode.com/problems/final-prices-with-a-special-discount-in-a-shop", name: "final prices with a special discount in a shop", tag: "Array   Stack   Monotonic Stack", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 210, link: "https://leetcode.com/problems/maximize-sum-of-array-after-k-negations", name: "maximize sum of array after k negations", tag: "Array   Greedy   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 211, link: "https://leetcode.com/problems/uncommon-words-from-two-sentences", name: "uncommon words from two sentences", tag: "Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 212, link: "https://leetcode.com/problems/binary-number-with-alternating-bits", name: "binary number with alternating bits", tag: "Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 213, link: "https://leetcode.com/problems/matrix-diagonal-sum", name: "matrix diagonal sum", tag: "Array   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 214, link: "https://leetcode.com/problems/keyboard-row", name: "keyboard row", tag: "Array   Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 215, link: "https://leetcode.com/problems/n-repeated-element-in-size-2n-array", name: "n repeated element in size 2n array", tag: "Array   Hash Table", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 216, link: "https://leetcode.com/problems/reverse-string-ii", name: "reverse string ii", tag: "Two Pointers   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 217, link: "https://leetcode.com/problems/convert-a-number-to-hexadecimal", name: "convert a number to hexadecimal", tag: "Math   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 218, link: "https://leetcode.com/problems/sort-integers-by-the-number-of-1-bits", name: "sort integers by the number of 1 bits", tag: "Array   Bit Manipulation   Sorting   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 219, link: "https://leetcode.com/problems/largest-perimeter-triangle", name: "largest perimeter triangle", tag: "Array   Math   Greedy   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 220, link: "https://leetcode.com/problems/lucky-numbers-in-a-matrix", name: "lucky numbers in a matrix", tag: "Array   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 221, link: "https://leetcode.com/problems/rank-transform-of-an-array", name: "rank transform of an array", tag: "Array   Hash Table   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 222, link: "https://leetcode.com/problems/decrypt-string-from-alphabet-to-integer-mapping", name: "decrypt string from alphabet to integer mapping", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 223, link: "https://leetcode.com/problems/build-array-from-permutation", name: "build array from permutation", tag: "Array   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 224, link: "https://leetcode.com/problems/maximum-product-of-two-elements-in-an-array", name: "maximum product of two elements in an array", tag: "Array   Sorting   Heap (Priority Queue)", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 225, link: "https://leetcode.com/problems/check-if-it-is-a-straight-line", name: "check if it is a straight line", tag: "Array   Math   Geometry", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 226, link: "https://leetcode.com/problems/license-key-formatting", name: "license key formatting", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 227, link: "https://leetcode.com/problems/number-of-recent-calls", name: "number of recent calls", tag: "Design   Queue   Data Stream", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 228, link: "https://leetcode.com/problems/xor-operation-in-an-array", name: "xor operation in an array", tag: "Math   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 229, link: "https://leetcode.com/problems/find-winner-on-a-tic-tac-toe-game", name: "find winner on a tic tac toe game", tag: "Array   Hash Table   Matrix   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 230, link: "https://leetcode.com/problems/complement-of-base-10-integer", name: "complement of base 10 integer", tag: "Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 231, link: "https://leetcode.com/problems/check-if-n-and-its-double-exist", name: "check if n and its double exist", tag: "Array   Hash Table   Two Pointers   Binary Search   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 232, link: "https://leetcode.com/problems/maximum-nesting-depth-of-the-parentheses", name: "maximum nesting depth of the parentheses", tag: "String   Stack", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},   
        {index: 233, link: "https://leetcode.com/problems/sorting-the-sentence", name: "sorting the sentence", tag: "String   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 234, link: "https://leetcode.com/problems/count-the-number-of-consistent-strings", name: "count the number of consistent strings", tag: "Array   Hash Table   String   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 235, link: "https://leetcode.com/problems/distribute-candies-to-people", name: "distribute candies to people", tag: "Math   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 236, link: "https://leetcode.com/problems/power-of-three", name: "power of three", tag: "Math   Recursion", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 237, link: "https://leetcode.com/problems/1-bit-and-2-bit-characters", name: "1 bit and 2 bit characters", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 238, link: "https://leetcode.com/problems/decompress-run-length-encoded-list", name: "decompress run length encoded list", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 239, link: "https://leetcode.com/problems/goat-latin", name: "goat latin", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 240, link: "https://leetcode.com/problems/cells-with-odd-values-in-a-matrix", name: "cells with odd values in a matrix", tag: "Array   Math   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},      
        {index: 241, link: "https://leetcode.com/problems/count-items-matching-a-rule", name: "count items matching a rule", tag: "Array   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 242, link: "https://leetcode.com/problems/find-the-highest-altitude", name: "find the highest altitude", tag: "Array   Prefix Sum", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 243, link: "https://leetcode.com/problems/make-the-string-great", name: "make the string great", tag: "String   Stack", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 244, link: "https://leetcode.com/problems/check-if-two-string-arrays-are-equivalent", name: "check if two string arrays are equivalent", tag: "Array   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10}, 
        {index: 245, link: "https://leetcode.com/problems/number-of-students-unable-to-eat-lunch", name: "number of students unable to eat lunch", tag: "Array   Stack   Queue   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 246, link: "https://leetcode.com/problems/water-bottles", name: "water bottles", tag: "Math   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 247, link: "https://leetcode.com/problems/check-array-formation-through-concatenation", name: "check array formation through concatenation", tag: "Array   Hash Table", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 248, link: "https://leetcode.com/problems/array-partition-i", name: "array partition i", tag: "Array   Greedy   Sorting   Counting Sort", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 249, link: "https://leetcode.com/problems/concatenation-of-array", name: "concatenation of array", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 250, link: "https://leetcode.com/problems/make-two-arrays-equal-by-reversing-sub-arrays", name: "make two arrays equal by reversing sub arrays", tag: "Array   Hash Table   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 251, link: "https://leetcode.com/problems/range-addition-ii", name: "range addition ii", tag: "Array   Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 252, link: "https://leetcode.com/problems/sum-of-unique-elements", name: "sum of unique elements", tag: "Array   Hash Table   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 253, link: "https://leetcode.com/problems/element-appearing-more-than-25-in-sorted-array", name: "element appearing more than 25 in sorted array", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 254, link: "https://leetcode.com/problems/largest-number-at-least-twice-of-others", name: "largest number at least twice of others", tag: "Array   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},    
        {index: 255, link: "https://leetcode.com/problems/positions-of-large-groups", name: "positions of large groups", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 256, link: "https://leetcode.com/problems/sum-of-all-subset-xor-totals", name: "sum of all subset xor totals", tag: "Array   Math   Backtracking   Bit Manipulation   Combinatorics", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 257, link: "https://leetcode.com/problems/decode-xored-array", name: "decode xored array", tag: "Array   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 258, link: "https://leetcode.com/problems/special-array-with-x-elements-greater-than-or-equal-x", name: "special array with x elements greater than or equal x", tag: "Array   Binary Search   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 259, link: "https://leetcode.com/problems/longest-uncommon-subsequence-i", name: "longest uncommon subsequence i", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 260, link: "https://leetcode.com/problems/find-lucky-integer-in-an-array", name: "find lucky integer in an array", tag: "Array   Hash Table   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},        
        {index: 261, link: "https://leetcode.com/problems/check-if-the-sentence-is-pangram", name: "check if the sentence is pangram", tag: "Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 262, link: "https://leetcode.com/problems/goal-parser-interpretation", name: "goal parser interpretation", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 263, link: "https://leetcode.com/problems/design-parking-system", name: "design parking system", tag: "Design   Simulation   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 264, link: "https://leetcode.com/problems/find-if-path-exists-in-graph", name: "find if path exists in graph", tag: "Depth-First Search   Breadth-First Search   Graph", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 265, link: "https://leetcode.com/problems/number-of-students-doing-homework-at-a-given-time", name: "number of students doing homework at a given time", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 266, link: "https://leetcode.com/problems/can-make-arithmetic-progression-from-sequence", name: "can make arithmetic progression from sequence", tag: "Array   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 267, link: "https://leetcode.com/problems/count-of-matches-in-tournament", name: "count of matches in tournament", tag: "Math   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 268, link: "https://leetcode.com/problems/perfect-number", name: "perfect number", tag: "Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 269, link: "https://leetcode.com/problems/guess-number-higher-or-lower", name: "guess number higher or lower", tag: "Binary Search   Interactive", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 270, link: "https://leetcode.com/problems/distance-between-bus-stops", name: "distance between bus stops", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 271, link: "https://leetcode.com/problems/binary-prefix-divisible-by-5", name: "binary prefix divisible by 5", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 272, link: "https://leetcode.com/problems/slowest-key", name: "slowest key", tag: "Array   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 273, link: "https://leetcode.com/problems/increasing-decreasing-string", name: "increasing decreasing string", tag: "Hash Table   String   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 274, link: "https://leetcode.com/problems/length-of-last-word", name: "length of last word", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 275, link: "https://leetcode.com/problems/string-matching-in-an-array", name: "string matching in an array", tag: "String   String Matching", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 276, link: "https://leetcode.com/problems/maximum-score-after-splitting-a-string", name: "maximum score after splitting a string", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 277, link: "https://leetcode.com/problems/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence", name: "check if a word occurs as a prefix of any word in a sentence", tag: "String   String Matching", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 278, link: "https://leetcode.com/problems/minimum-operations-to-make-the-array-increasing", name: "minimum operations to make the array increasing", tag: "Array   Greedy", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 279, link: "https://leetcode.com/problems/number-of-equivalent-domino-pairs", name: "number of equivalent domino pairs", tag: "Array   Hash Table   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},  
        {index: 280, link: "https://leetcode.com/problems/matrix-cells-in-distance-order", name: "matrix cells in distance order", tag: "Array   Math   Geometry   Sorting   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 281, link: "https://leetcode.com/problems/path-crossing", name: "path crossing", tag: "Hash Table   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 282, link: "https://leetcode.com/problems/shift-2d-grid", name: "shift 2d grid", tag: "Array   Matrix   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 283, link: "https://leetcode.com/problems/determine-if-string-halves-are-alike", name: "determine if string halves are alike", tag: "String   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},        
        {index: 284, link: "https://leetcode.com/problems/detect-pattern-of-length-m-repeated-k-or-more-times", name: "detect pattern of length m repeated k or more times", tag: "Array   Enumeration", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 285, link: "https://leetcode.com/problems/base-7", name: "base 7", tag: "Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 286, link: "https://leetcode.com/problems/prime-number-of-set-bits-in-binary-representation", name: "prime number of set bits in binary representation", tag: "Math   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 287, link: "https://leetcode.com/problems/maximum-population-year", name: "maximum population year", tag: "Array   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 288, link: "https://leetcode.com/problems/longest-nice-substring", name: "longest nice substring", tag: "Hash Table   String   Bit Manipulation   Sliding Window", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 289, link: "https://leetcode.com/problems/build-an-array-with-stack-operations", name: "build an array with stack operations", tag: "Array   Stack   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 290, link: "https://leetcode.com/problems/available-captures-for-rook", name: "available captures for rook", tag: "Array   Matrix   Simulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 291, link: "https://leetcode.com/problems/determine-whether-matrix-can-be-obtained-by-rotation", name: "determine whether matrix can be obtained by rotation", tag: "Array   Matrix", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 292, link: "https://leetcode.com/problems/average-salary-excluding-the-minimum-and-maximum-salary", name: "average salary excluding the minimum and maximum salary", tag: "Array   Sorting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 293, link: "https://leetcode.com/problems/number-of-segments-in-a-string", name: "number of segments in a string", tag: "String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 294, link: "https://leetcode.com/problems/substrings-of-size-three-with-distinct-characters", name: "substrings of size three with distinct characters", tag: "Hash Table   String   Sliding Window   Counting", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 295, link: "https://leetcode.com/problems/crawler-log-folder", name: "crawler log folder", tag: "Array   String   Stack", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 296, link: "https://leetcode.com/problems/binary-gap", name: "binary gap", tag: "Math   Bit Manipulation", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 297, link: "https://leetcode.com/problems/check-if-array-is-sorted-and-rotated", name: "check if array is sorted and rotated", tag: "Array", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 298, link: "https://leetcode.com/problems/merge-strings-alternately", name: "merge strings alternately", tag: "Two Pointers   String", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
        {index: 299, link: "https://leetcode.com/problems/smallest-range-i", name: "smallest range i", tag: "Array   Math", difficult: "easy", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 10},
    ],
    //difficult: medium
    [
        {index: 0, link: "https://leetcode.com/problems/longest-substring-without-repeating-characters", name: "longest substring without repeating characters", tag: "Hash Table   String   Sliding Window", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 1, link: "https://leetcode.com/problems/add-two-numbers", name: "add two numbers", tag: "Linked List   Math   Recursion", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 2, link: "https://leetcode.com/problems/3sum", name: "3sum", tag: "Array   Two Pointers   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 3, link: "https://leetcode.com/problems/longest-palindromic-substring", name: "longest palindromic substring", tag: "String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 4, link: "https://leetcode.com/problems/container-with-most-water", name: "container with most water", tag: "Array   Two Pointers   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 5, link: "https://leetcode.com/problems/search-in-rotated-sorted-array", name: "search in rotated sorted array", tag: "Array   Binary Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 6, link: "https://leetcode.com/problems/number-of-islands", name: "number of islands", tag: "Array   Depth-First Search   Breadth-First Search   Union Find   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 7, link: "https://leetcode.com/problems/lru-cache", name: "lru cache", tag: "Hash Table   Linked List   Design   Doubly-Linked List", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 8, link: "https://leetcode.com/problems/merge-intervals", name: "merge intervals", tag: "Array   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 9, link: "https://leetcode.com/problems/generate-parentheses", name: "generate parentheses", tag: "String   Dynamic Programming   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 10, link: "https://leetcode.com/problems/find-the-duplicate-number", name: "find the duplicate number", tag: "Array   Two Pointers   Binary Search   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 11, link: "https://leetcode.com/problems/product-of-array-except-self", name: "product of array except self", tag: "Array   Prefix Sum", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 12, link: "https://leetcode.com/problems/subarray-sum-equals-k", name: "subarray sum equals k", tag: "Array   Hash Table   Prefix Sum", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 13, link: "https://leetcode.com/problems/house-robber", name: "house robber", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 14, link: "https://leetcode.com/problems/longest-increasing-subsequence", name: "longest increasing subsequence", tag: "Array   Binary Search   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 15, link: "https://leetcode.com/problems/maximum-product-subarray", name: "maximum product subarray", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 16, link: "https://leetcode.com/problems/coin-change", name: "coin change", tag: "Array   Dynamic Programming   Breadth-First Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 17, link: "https://leetcode.com/problems/jump-game", name: "jump game", tag: "Array   Dynamic Programming   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 18, link: "https://leetcode.com/problems/word-break", name: "word break", tag: "Hash Table   String   Dynamic Programming   Trie   Memoization", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 19, link: "https://leetcode.com/problems/find-first-and-last-position-of-element-in-sorted-array", name: "find first and last position of element in sorted array", tag: "Array   Binary Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 20, link: "https://leetcode.com/problems/permutations", name: "permutations", tag: "Array   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 21, link: "https://leetcode.com/problems/combination-sum", name: "combination sum", tag: "Array   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 22, link: "https://leetcode.com/problems/letter-combinations-of-a-phone-number", name: "letter combinations of a phone number", tag: "Hash Table   String   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 23, link: "https://leetcode.com/problems/validate-binary-search-tree", name: "validate binary search tree", tag: "Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 24, link: "https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree", name: "lowest common ancestor of a binary tree", tag: "Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 25, link: "https://leetcode.com/problems/next-permutation", name: "next permutation", tag: "Array   Two Pointers", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 26, link: "https://leetcode.com/problems/sort-colors", name: "sort colors", tag: "Array   Two Pointers   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 27, link: "https://leetcode.com/problems/remove-nth-node-from-end-of-list", name: "remove nth node from end of list", tag: "Linked List   Two Pointers", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},      
        {index: 28, link: "https://leetcode.com/problems/course-schedule", name: "course schedule", tag: "Depth-First Search   Breadth-First Search   Graph   Topological Sort", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 29, link: "https://leetcode.com/problems/word-search", name: "word search", tag: "Array   Backtracking   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 30, link: "https://leetcode.com/problems/subsets", name: "subsets", tag: "Array   Backtracking   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 31, link: "https://leetcode.com/problems/longest-consecutive-sequence", name: "longest consecutive sequence", tag: "Array   Hash Table   Union Find", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 32, link: "https://leetcode.com/problems/kth-largest-element-in-an-array", name: "kth largest element in an array", tag: "Array   Divide and Conquer   Sorting   Heap (Priority Queue)   Quickselect", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 33, link: "https://leetcode.com/problems/group-anagrams", name: "group anagrams", tag: "Hash Table   String   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 34, link: "https://leetcode.com/problems/unique-paths", name: "unique paths", tag: "Math   Dynamic Programming   Combinatorics", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 35, link: "https://leetcode.com/problems/rotate-image", name: "rotate image", tag: "Array   Math   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 36, link: "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal", name: "construct binary tree from preorder and inorder traversal", tag: "Array   Hash Table   Divide and Conquer   Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 37, link: "https://leetcode.com/problems/rotate-array", name: "rotate array", tag: "Array   Math   Two Pointers", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 38, link: "https://leetcode.com/problems/decode-string", name: "decode string", tag: "String   Stack   Recursion", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 39, link: "https://leetcode.com/problems/top-k-frequent-elements", name: "top k frequent elements", tag: "Array   Hash Table   Divide and Conquer   Sorting   Heap (Priority Queue)   Bucket Sort   Counting   Quickselect", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 40, link: "https://leetcode.com/problems/copy-list-with-random-pointer", name: "copy list with random pointer", tag: "Hash Table   Linked List", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 41, link: "https://leetcode.com/problems/path-sum-iii", name: "path sum iii", tag: "Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 42, link: "https://leetcode.com/problems/binary-tree-level-order-traversal", name: "binary tree level order traversal", tag: "Tree   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 43, link: "https://leetcode.com/problems/jump-game-ii", name: "jump game ii", tag: "Array   Dynamic Programming   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 44, link: "https://leetcode.com/problems/partition-equal-subset-sum", name: "partition equal subset sum", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 45, link: "https://leetcode.com/problems/unique-binary-search-trees", name: "unique binary search trees", tag: "Math   Dynamic Programming   Tree   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 46, link: "https://leetcode.com/problems/maximal-square", name: "maximal square", tag: "Array   Dynamic Programming   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 47, link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii", name: "best time to buy and sell stock ii", tag: "Array   Dynamic Programming   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 48, link: "https://leetcode.com/problems/minimum-path-sum", name: "minimum path sum", tag: "Array   Dynamic Programming   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 49, link: "https://leetcode.com/problems/search-a-2d-matrix-ii", name: "search a 2d matrix ii", tag: "Array   Binary Search   Divide and Conquer   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},   
        {index: 50, link: "https://leetcode.com/problems/reverse-integer", name: "reverse integer", tag: "Math", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 51, link: "https://leetcode.com/problems/flatten-binary-tree-to-linked-list", name: "flatten binary tree to linked list", tag: "Linked List   Stack   Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 52, link: "https://leetcode.com/problems/implement-trie-prefix-tree", name: "implement trie prefix tree", tag: "Hash Table   String   Design   Trie", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 53, link: "https://leetcode.com/problems/daily-temperatures", name: "daily temperatures", tag: "Array   Stack   Monotonic Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 54, link: "https://leetcode.com/problems/partition-labels", name: "partition labels", tag: "Hash Table   Two Pointers   String   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 55, link: "https://leetcode.com/problems/perfect-squares", name: "perfect squares", tag: "Math   Dynamic Programming   Breadth-First Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 56, link: "https://leetcode.com/problems/decode-ways", name: "decode ways", tag: "String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 57, link: "https://leetcode.com/problems/task-scheduler", name: "task scheduler", tag: "Array   Hash Table   Greedy   Sorting   Heap (Priority Queue)   Counting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 58, link: "https://leetcode.com/problems/spiral-matrix", name: "spiral matrix", tag: "Array   Matrix   Simulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 59, link: "https://leetcode.com/problems/target-sum", name: "target sum", tag: "Array   Dynamic Programming   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 60, link: "https://leetcode.com/problems/course-schedule-ii", name: "course schedule ii", tag: "Depth-First Search   Breadth-First Search   Graph   Topological Sort", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 61, link: "https://leetcode.com/problems/linked-list-cycle-ii", name: "linked list cycle ii", tag: "Hash Table   Linked List   Two Pointers", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 62, link: "https://leetcode.com/problems/house-robber-iii", name: "house robber iii", tag: "Dynamic Programming   Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},   
        {index: 63, link: "https://leetcode.com/problems/sort-list", name: "sort list", tag: "Linked List   Two Pointers   Divide and Conquer   Sorting   Merge Sort", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},        
        {index: 64, link: "https://leetcode.com/problems/find-all-anagrams-in-a-string", name: "find all anagrams in a string", tag: "Hash Table   String   Sliding Window", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},  
        {index: 65, link: "https://leetcode.com/problems/binary-tree-right-side-view", name: "binary tree right side view", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 66, link: "https://leetcode.com/problems/palindromic-substrings", name: "palindromic substrings", tag: "String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 67, link: "https://leetcode.com/problems/rotting-oranges", name: "rotting oranges", tag: "Array   Breadth-First Search   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 68, link: "https://leetcode.com/problems/set-matrix-zeroes", name: "set matrix zeroes", tag: "Array   Hash Table   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 69, link: "https://leetcode.com/problems/search-a-2d-matrix", name: "search a 2d matrix", tag: "Array   Binary Search   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 70, link: "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array", name: "find minimum in rotated sorted array", tag: "Array   Binary Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},   
        {index: 71, link: "https://leetcode.com/problems/populating-next-right-pointers-in-each-node", name: "populating next right pointers in each node", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 72, link: "https://leetcode.com/problems/kth-smallest-element-in-a-bst", name: "kth smallest element in a bst", tag: "Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 73, link: "https://leetcode.com/problems/minimum-size-subarray-sum", name: "minimum size subarray sum", tag: "Array   Binary Search   Sliding Window   Prefix Sum", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 74, link: "https://leetcode.com/problems/find-all-duplicates-in-an-array", name: "find all duplicates in an array", tag: "Array   Hash Table", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 75, link: "https://leetcode.com/problems/all-nodes-distance-k-in-binary-tree", name: "all nodes distance k in binary tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 76, link: "https://leetcode.com/problems/swap-nodes-in-pairs", name: "swap nodes in pairs", tag: "Linked List   Recursion", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 77, link: "https://leetcode.com/problems/reverse-linked-list-ii", name: "reverse linked list ii", tag: "Linked List", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 78, link: "https://leetcode.com/problems/longest-common-subsequence", name: "longest common subsequence", tag: "String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 79, link: "https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix", name: "kth smallest element in a sorted matrix", tag: "Array   Binary Search   Sorting   Heap (Priority Queue)   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 80, link: "https://leetcode.com/problems/4sum", name: "4sum", tag: "Array   Two Pointers   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 81, link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown", name: "best time to buy and sell stock with cooldown", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 82, link: "https://leetcode.com/problems/palindrome-partitioning", name: "palindrome partitioning", tag: "String   Dynamic Programming   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},       
        {index: 83, link: "https://leetcode.com/problems/reorder-list", name: "reorder list", tag: "Linked List   Two Pointers   Stack   Recursion", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 84, link: "https://leetcode.com/problems/max-area-of-island", name: "max area of island", tag: "Array   Depth-First Search   Breadth-First Search   Union Find   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 85, link: "https://leetcode.com/problems/3sum-closest", name: "3sum closest", tag: "Array   Two Pointers   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 86, link: "https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal", name: "binary tree zigzag level order traversal", tag: "Tree   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 87, link: "https://leetcode.com/problems/find-peak-element", name: "find peak element", tag: "Array   Binary Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 88, link: "https://leetcode.com/problems/insert-delete-getrandom-o1", name: "insert delete getrandom o1", tag: "Array   Hash Table   Math   Design   Randomized", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 89, link: "https://leetcode.com/problems/k-closest-points-to-origin", name: "k closest points to origin", tag: "Array   Math   Divide and Conquer   Geometry   Sorting   Heap (Priority Queue)   Quickselect", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 90, link: "https://leetcode.com/problems/odd-even-linked-list", name: "odd even linked list", tag: "Linked List", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 91, link: "https://leetcode.com/problems/minimum-height-trees", name: "minimum height trees", tag: "Depth-First Search   Breadth-First Search   Graph   Topological Sort", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 92, link: "https://leetcode.com/problems/shortest-unsorted-continuous-subarray", name: "shortest unsorted continuous subarray", tag: "Array   Two Pointers   Stack   Greedy   Sorting   Monotonic Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 93, link: "https://leetcode.com/problems/binary-search-tree-iterator", name: "binary search tree iterator", tag: "Stack   Tree   Design   Binary Search Tree   Binary Tree   Iterator", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 94, link: "https://leetcode.com/problems/queue-reconstruction-by-height", name: "queue reconstruction by height", tag: "Array   Greedy   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 95, link: "https://leetcode.com/problems/delete-node-in-a-bst", name: "delete node in a bst", tag: "Tree   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 96, link: "https://leetcode.com/problems/longest-palindromic-subsequence", name: "longest palindromic subsequence", tag: "String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},      
        {index: 97, link: "https://leetcode.com/problems/evaluate-division", name: "evaluate division", tag: "Array   Depth-First Search   Breadth-First Search   Union Find   Graph   Shortest Path", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 98, link: "https://leetcode.com/problems/house-robber-ii", name: "house robber ii", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 99, link: "https://leetcode.com/problems/clone-graph", name: "clone graph", tag: "Hash Table   Depth-First Search   Breadth-First Search   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 100, link: "https://leetcode.com/problems/coin-change-2", name: "coin change 2", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 101, link: "https://leetcode.com/problems/number-of-provinces", name: "number of provinces", tag: "Depth-First Search   Breadth-First Search   Union Find   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 102, link: "https://leetcode.com/problems/single-element-in-a-sorted-array", name: "single element in a sorted array", tag: "Array   Binary Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 103, link: "https://leetcode.com/problems/gas-station", name: "gas station", tag: "Array   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 104, link: "https://leetcode.com/problems/unique-binary-search-trees-ii", name: "unique binary search trees ii", tag: "Dynamic Programming   Backtracking   Tree   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 105, link: "https://leetcode.com/problems/cheapest-flights-within-k-stops", name: "cheapest flights within k stops", tag: "Dynamic Programming   Depth-First Search   Breadth-First Search   Graph   Heap (Priority Queue)   Shortest Path", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 106, link: "https://leetcode.com/problems/remove-k-digits", name: "remove k digits", tag: "String   Stack   Greedy   Monotonic Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 107, link: "https://leetcode.com/problems/surrounded-regions", name: "surrounded regions", tag: "Array   Depth-First Search   Breadth-First Search   Union Find   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 108, link: "https://leetcode.com/problems/count-complete-tree-nodes", name: "count complete tree nodes", tag: "Binary Search   Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 109, link: "https://leetcode.com/problems/partition-to-k-equal-sum-subsets", name: "partition to k equal sum subsets", tag: "Array   Dynamic Programming   Backtracking   Bit Manipulation   Memoization   Bitmask", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 110, link: "https://leetcode.com/problems/largest-number", name: "largest number", tag: "String   Greedy   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 111, link: "https://leetcode.com/problems/count-primes", name: "count primes", tag: "Array   Math   Enumeration   Number Theory", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 112, link: "https://leetcode.com/problems/permutations-ii", name: "permutations ii", tag: "Array   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 113, link: "https://leetcode.com/problems/combination-sum-ii", name: "combination sum ii", tag: "Array   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 114, link: "https://leetcode.com/problems/triangle", name: "triangle", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 115, link: "https://leetcode.com/problems/remove-duplicates-from-sorted-list-ii", name: "remove duplicates from sorted list ii", tag: "Linked List   Two Pointers", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 116, link: "https://leetcode.com/problems/valid-sudoku", name: "valid sudoku", tag: "Array   Hash Table   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 117, link: "https://leetcode.com/problems/path-sum-ii", name: "path sum ii", tag: "Backtracking   Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 118, link: "https://leetcode.com/problems/convert-sorted-list-to-binary-search-tree", name: "convert sorted list to binary search tree", tag: "Linked List   Divide and Conquer   Tree   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 119, link: "https://leetcode.com/problems/insert-interval", name: "insert interval", tag: "Array", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 120, link: "https://leetcode.com/problems/subsets-ii", name: "subsets ii", tag: "Array   Backtracking   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 121, link: "https://leetcode.com/problems/unique-paths-ii", name: "unique paths ii", tag: "Array   Dynamic Programming   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 122, link: "https://leetcode.com/problems/reorganize-string", name: "reorganize string", tag: "Hash Table   String   Greedy   Sorting   Heap (Priority Queue)   Counting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 123, link: "https://leetcode.com/problems/permutation-in-string", name: "permutation in string", tag: "Hash Table   Two Pointers   String   Sliding Window", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},  
        {index: 124, link: "https://leetcode.com/problems/majority-element-ii", name: "majority element ii", tag: "Array   Hash Table   Sorting   Counting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 125, link: "https://leetcode.com/problems/construct-binary-tree-from-inorder-and-postorder-traversal", name: "construct binary tree from inorder and postorder traversal", tag: "Array   Hash Table   Divide and Conquer   Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 126, link: "https://leetcode.com/problems/minimum-cost-for-tickets", name: "minimum cost for tickets", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 127, link: "https://leetcode.com/problems/top-k-frequent-words", name: "top k frequent words", tag: "Hash Table   String   Trie   Sorting   Heap (Priority Queue)   Bucket Sort   Counting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 128, link: "https://leetcode.com/problems/01-matrix", name: "01 matrix", tag: "Array   Dynamic Programming   Breadth-First Search   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 129, link: "https://leetcode.com/problems/multiply-strings", name: "multiply strings", tag: "Math   String   Simulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 130, link: "https://leetcode.com/problems/design-add-and-search-words-data-structure", name: "design add and search words data structure", tag: "String   Depth-First Search   Design   Trie", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 131, link: "https://leetcode.com/problems/next-greater-element-ii", name: "next greater element ii", tag: "Array   Stack   Monotonic Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 132, link: "https://leetcode.com/problems/basic-calculator-ii", name: "basic calculator ii", tag: "Math   String   Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 133, link: "https://leetcode.com/problems/accounts-merge", name: "accounts merge", tag: "Array   String   Depth-First Search   Breadth-First Search   Union Find", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 134, link: "https://leetcode.com/problems/interval-list-intersections", name: "interval list intersections", tag: "Array   Two Pointers", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 135, link: "https://leetcode.com/problems/rotate-list", name: "rotate list", tag: "Linked List   Two Pointers", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 136, link: "https://leetcode.com/problems/sum-root-to-leaf-numbers", name: "sum root to leaf numbers", tag: "Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 137, link: "https://leetcode.com/problems/powx-n", name: "powx n", tag: "Math   Recursion", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 138, link: "https://leetcode.com/problems/max-consecutive-ones-iii", name: "max consecutive ones iii", tag: "Array   Binary Search   Sliding Window   Prefix Sum", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 139, link: "https://leetcode.com/problems/remove-duplicate-letters", name: "remove duplicate letters", tag: "String   Stack   Greedy   Monotonic Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},      
        {index: 140, link: "https://leetcode.com/problems/recover-binary-search-tree", name: "recover binary search tree", tag: "Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 141, link: "https://leetcode.com/problems/is-graph-bipartite", name: "is graph bipartite", tag: "Depth-First Search   Breadth-First Search   Union Find   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 142, link: "https://leetcode.com/problems/contiguous-array", name: "contiguous array", tag: "Array   Hash Table   Prefix Sum", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 143, link: "https://leetcode.com/problems/find-k-closest-elements", name: "find k closest elements", tag: "Array   Two Pointers   Binary Search   Sorting   Heap (Priority Queue)", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 144, link: "https://leetcode.com/problems/sort-characters-by-frequency", name: "sort characters by frequency", tag: "Hash Table   String   Sorting   Heap (Priority Queue)   Bucket Sort   Counting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 145, link: "https://leetcode.com/problems/longest-repeating-character-replacement", name: "longest repeating character replacement", tag: "Hash Table   String   Sliding Window", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 146, link: "https://leetcode.com/problems/single-number-ii", name: "single number ii", tag: "Array   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 147, link: "https://leetcode.com/problems/ugly-number-ii", name: "ugly number ii", tag: "Hash Table   Math   Dynamic Programming   Heap (Priority Queue)", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},    
        {index: 148, link: "https://leetcode.com/problems/single-number-iii", name: "single number iii", tag: "Array   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 149, link: "https://leetcode.com/problems/network-delay-time", name: "network delay time", tag: "Depth-First Search   Breadth-First Search   Graph   Heap (Priority Queue)   Shortest Path", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 150, link: "https://leetcode.com/problems/longest-substring-with-at-least-k-repeating-characters", name: "longest substring with at least k repeating characters", tag: "Hash Table   String   Divide and Conquer   Sliding Window", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 151, link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-transaction-fee", name: "best time to buy and sell stock with transaction fee", tag: "Array   Dynamic Programming   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 152, link: "https://leetcode.com/problems/non-decreasing-array", name: "non decreasing array", tag: "Array", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 153, link: "https://leetcode.com/problems/interleaving-string", name: "interleaving string", tag: "String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 154, link: "https://leetcode.com/problems/game-of-life", name: "game of life", tag: "Array   Matrix   Simulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 155, link: "https://leetcode.com/problems/combinations", name: "combinations", tag: "Array   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 156, link: "https://leetcode.com/problems/all-paths-from-source-to-target", name: "all paths from source to target", tag: "Backtracking   Depth-First Search   Breadth-First Search   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 157, link: "https://leetcode.com/problems/increasing-triplet-subsequence", name: "increasing triplet subsequence", tag: "Array   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 158, link: "https://leetcode.com/problems/trim-a-binary-search-tree", name: "trim a binary search tree", tag: "Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 159, link: "https://leetcode.com/problems/maximum-length-of-repeated-subarray", name: "maximum length of repeated subarray", tag: "Array   Binary Search   Dynamic Programming   Sliding Window   Rolling Hash   Hash Function", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 160, link: "https://leetcode.com/problems/capacity-to-ship-packages-within-d-days", name: "capacity to ship packages within d days", tag: "Array   Binary Search   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 161, link: "https://leetcode.com/problems/subarray-product-less-than-k", name: "subarray product less than k", tag: "Array   Sliding Window", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 162, link: "https://leetcode.com/problems/flatten-a-multilevel-doubly-linked-list", name: "flatten a multilevel doubly linked list", tag: "Linked List   Depth-First Search   Doubly-Linked List", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 163, link: "https://leetcode.com/problems/populating-next-right-pointers-in-each-node-ii", name: "populating next right pointers in each node ii", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 164, link: "https://leetcode.com/problems/maximum-binary-tree", name: "maximum binary tree", tag: "Array   Divide and Conquer   Stack   Tree   Monotonic Stack   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 165, link: "https://leetcode.com/problems/minimum-remove-to-make-valid-parentheses", name: "minimum remove to make valid parentheses", tag: "String   Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50}, 
        {index: 166, link: "https://leetcode.com/problems/distribute-coins-in-binary-tree", name: "distribute coins in binary tree", tag: "Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 167, link: "https://leetcode.com/problems/redundant-connection", name: "redundant connection", tag: "Depth-First Search   Breadth-First Search   Union Find   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 168, link: "https://leetcode.com/problems/non-overlapping-intervals", name: "non overlapping intervals", tag: "Array   Dynamic Programming   Greedy   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 169, link: "https://leetcode.com/problems/zigzag-conversion", name: "zigzag conversion", tag: "String", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 170, link: "https://leetcode.com/problems/maximum-width-of-binary-tree", name: "maximum width of binary tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 171, link: "https://leetcode.com/problems/construct-binary-search-tree-from-preorder-traversal", name: "construct binary search tree from preorder traversal", tag: "Array   Stack   Tree   Binary Search Tree   Monotonic Stack   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 172, link: "https://leetcode.com/problems/different-ways-to-add-parentheses", name: "different ways to add parentheses", tag: "Math   String   Dynamic Programming   Recursion   Memoization", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 173, link: "https://leetcode.com/problems/search-in-rotated-sorted-array-ii", name: "search in rotated sorted array ii", tag: "Array   Binary Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},        
        {index: 174, link: "https://leetcode.com/problems/add-two-numbers-ii", name: "add two numbers ii", tag: "Linked List   Math   Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 175, link: "https://leetcode.com/problems/convert-bst-to-greater-tree", name: "convert bst to greater tree", tag: "Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 176, link: "https://leetcode.com/problems/partition-list", name: "partition list", tag: "Linked List   Two Pointers", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 177, link: "https://leetcode.com/problems/number-of-longest-increasing-subsequence", name: "number of longest increasing subsequence", tag: "Array   Dynamic Programming   Binary Indexed Tree   Segment Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 178, link: "https://leetcode.com/problems/valid-parenthesis-string", name: "valid parenthesis string", tag: "String   Dynamic Programming   Stack   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},  
        {index: 179, link: "https://leetcode.com/problems/combination-sum-iv", name: "combination sum iv", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 180, link: "https://leetcode.com/problems/asteroid-collision", name: "asteroid collision", tag: "Array   Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 181, link: "https://leetcode.com/problems/largest-divisible-subset", name: "largest divisible subset", tag: "Array   Math   Dynamic Programming   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},   
        {index: 182, link: "https://leetcode.com/problems/pacific-atlantic-water-flow", name: "pacific atlantic water flow", tag: "Array   Depth-First Search   Breadth-First Search   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 183, link: "https://leetcode.com/problems/132-pattern", name: "132 pattern", tag: "Array   Binary Search   Stack   Monotonic Stack   Ordered Set", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 184, link: "https://leetcode.com/problems/delete-and-earn", name: "delete and earn", tag: "Array   Hash Table   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 185, link: "https://leetcode.com/problems/sum-of-subarray-minimums", name: "sum of subarray minimums", tag: "Array   Dynamic Programming   Stack   Monotonic Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 186, link: "https://leetcode.com/problems/count-square-submatrices-with-all-ones", name: "count square submatrices with all ones", tag: "Array   Dynamic Programming   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 187, link: "https://leetcode.com/problems/flatten-nested-list-iterator", name: "flatten nested list iterator", tag: "Stack   Tree   Depth-First Search   Design   Queue   Iterator", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 188, link: "https://leetcode.com/problems/score-of-parentheses", name: "score of parentheses", tag: "String   Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 189, link: "https://leetcode.com/problems/longest-string-chain", name: "longest string chain", tag: "Array   Hash Table   Two Pointers   String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 190, link: "https://leetcode.com/problems/longest-univalue-path", name: "longest univalue path", tag: "Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 191, link: "https://leetcode.com/problems/letter-case-permutation", name: "letter case permutation", tag: "String   Backtracking   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 192, link: "https://leetcode.com/problems/binary-tree-level-order-traversal-ii", name: "binary tree level order traversal ii", tag: "Tree   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 193, link: "https://leetcode.com/problems/find-duplicate-subtrees", name: "find duplicate subtrees", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 194, link: "https://leetcode.com/problems/minimum-cost-tree-from-leaf-values", name: "minimum cost tree from leaf values", tag: "Dynamic Programming   Stack   Greedy   Monotonic Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 195, link: "https://leetcode.com/problems/pairs-of-songs-with-total-durations-divisible-by-60", name: "pairs of songs with total durations divisible by 60", tag: "Array   Hash Table   Counting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 196, link: "https://leetcode.com/problems/maximum-xor-of-two-numbers-in-an-array", name: "maximum xor of two numbers in an array", tag: "Array   Hash Table   Bit Manipulation   Trie", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 197, link: "https://leetcode.com/problems/find-k-pairs-with-smallest-sums", name: "find k pairs with smallest sums", tag: "Array   Heap (Priority Queue)", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},    
        {index: 198, link: "https://leetcode.com/problems/reverse-words-in-a-string", name: "reverse words in a string", tag: "Two Pointers   String", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 199, link: "https://leetcode.com/problems/4sum-ii", name: "4sum ii", tag: "Array   Hash Table", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 200, link: "https://leetcode.com/problems/integer-to-roman", name: "integer to roman", tag: "Hash Table   Math   String", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 201, link: "https://leetcode.com/problems/keys-and-rooms", name: "keys and rooms", tag: "Depth-First Search   Breadth-First Search   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 202, link: "https://leetcode.com/problems/predict-the-winner", name: "predict the winner", tag: "Array   Math   Dynamic Programming   Recursion   Game Theory", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 203, link: "https://leetcode.com/problems/maximum-sum-circular-subarray", name: "maximum sum circular subarray", tag: "Array   Divide and Conquer   Dynamic Programming   Queue   Monotonic Queue", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 204, link: "https://leetcode.com/problems/delete-nodes-and-return-forest", name: "delete nodes and return forest", tag: "Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 205, link: "https://leetcode.com/problems/arithmetic-slices", name: "arithmetic slices", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 206, link: "https://leetcode.com/problems/ones-and-zeroes", name: "ones and zeroes", tag: "Array   String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 207, link: "https://leetcode.com/problems/range-sum-query-mutable", name: "range sum query mutable", tag: "Array   Design   Binary Indexed Tree   Segment Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 208, link: "https://leetcode.com/problems/remove-duplicates-from-sorted-array-ii", name: "remove duplicates from sorted array ii", tag: "Array   Two Pointers", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 209, link: "https://leetcode.com/problems/number-of-matching-subsequences", name: "number of matching subsequences", tag: "Hash Table   String   Trie   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 210, link: "https://leetcode.com/problems/koko-eating-bananas", name: "koko eating bananas", tag: "Array   Binary Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 211, link: "https://leetcode.com/problems/open-the-lock", name: "open the lock", tag: "Array   Hash Table   String   Breadth-First Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 212, link: "https://leetcode.com/problems/serialize-and-deserialize-bst", name: "serialize and deserialize bst", tag: "String   Tree   Depth-First Search   Breadth-First Search   Design   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 213, link: "https://leetcode.com/problems/combination-sum-iii", name: "combination sum iii", tag: "Array   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 214, link: "https://leetcode.com/problems/evaluate-reverse-polish-notation", name: "evaluate reverse polish notation", tag: "Array   Math   Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 215, link: "https://leetcode.com/problems/maximum-points-you-can-obtain-from-cards", name: "maximum points you can obtain from cards", tag: "Array   Sliding Window   Prefix Sum", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 216, link: "https://leetcode.com/problems/divide-two-integers", name: "divide two integers", tag: "Math   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 217, link: "https://leetcode.com/problems/delete-operation-for-two-strings", name: "delete operation for two strings", tag: "String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},   
        {index: 218, link: "https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons", name: "minimum number of arrows to burst balloons", tag: "Array   Greedy   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 219, link: "https://leetcode.com/problems/subarray-sums-divisible-by-k", name: "subarray sums divisible by k", tag: "Array   Hash Table   Prefix Sum", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},        
        {index: 220, link: "https://leetcode.com/problems/restore-ip-addresses", name: "restore ip addresses", tag: "String   Backtracking", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 221, link: "https://leetcode.com/problems/spiral-matrix-ii", name: "spiral matrix ii", tag: "Array   Matrix   Simulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 222, link: "https://leetcode.com/problems/integer-break", name: "integer break", tag: "Math   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 223, link: "https://leetcode.com/problems/wiggle-subsequence", name: "wiggle subsequence", tag: "Array   Dynamic Programming   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 224, link: "https://leetcode.com/problems/jump-game-iii", name: "jump game iii", tag: "Array   Depth-First Search   Breadth-First Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 225, link: "https://leetcode.com/problems/insert-into-a-binary-search-tree", name: "insert into a binary search tree", tag: "Tree   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 226, link: "https://leetcode.com/problems/two-city-scheduling", name: "two city scheduling", tag: "Array   Greedy   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 227, link: "https://leetcode.com/problems/remove-all-adjacent-duplicates-in-string-ii", name: "remove all adjacent duplicates in string ii", tag: "String   Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 228, link: "https://leetcode.com/problems/range-sum-query-2d-immutable", name: "range sum query 2d immutable", tag: "Array   Design   Matrix   Prefix Sum", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},   
        {index: 229, link: "https://leetcode.com/problems/2-keys-keyboard", name: "2 keys keyboard", tag: "Math   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 230, link: "https://leetcode.com/problems/validate-stack-sequences", name: "validate stack sequences", tag: "Array   Stack   Simulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 231, link: "https://leetcode.com/problems/valid-triangle-number", name: "valid triangle number", tag: "Array   Two Pointers   Binary Search   Greedy   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 232, link: "https://leetcode.com/problems/all-possible-full-binary-trees", name: "all possible full binary trees", tag: "Dynamic Programming   Tree   Recursion   Memoization   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 233, link: "https://leetcode.com/problems/binary-tree-pruning", name: "binary tree pruning", tag: "Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 234, link: "https://leetcode.com/problems/sum-of-two-integers", name: "sum of two integers", tag: "Math   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 235, link: "https://leetcode.com/problems/online-stock-span", name: "online stock span", tag: "Stack   Design   Monotonic Stack   Data Stream", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 236, link: "https://leetcode.com/problems/binary-search-tree-to-greater-sum-tree", name: "binary search tree to greater sum tree", tag: "Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 237, link: "https://leetcode.com/problems/maximum-swap", name: "maximum swap", tag: "Math   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 238, link: "https://leetcode.com/problems/most-stones-removed-with-same-row-or-column", name: "most stones removed with same row or column", tag: "Depth-First Search   Union Find   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 239, link: "https://leetcode.com/problems/maximum-difference-between-node-and-ancestor", name: "maximum difference between node and ancestor", tag: "Tree   Depth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 240, link: "https://leetcode.com/problems/deepest-leaves-sum", name: "deepest leaves sum", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 241, link: "https://leetcode.com/problems/shortest-bridge", name: "shortest bridge", tag: "Array   Depth-First Search   Breadth-First Search   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},       
        {index: 242, link: "https://leetcode.com/problems/bitwise-and-of-numbers-range", name: "bitwise and of numbers range", tag: "Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 243, link: "https://leetcode.com/problems/contains-duplicate-iii", name: "contains duplicate iii", tag: "Array   Sliding Window   Sorting   Bucket Sort   Ordered Set", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 244, link: "https://leetcode.com/problems/robot-bounded-in-circle", name: "robot bounded in circle", tag: "Math   String   Simulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 245, link: "https://leetcode.com/problems/minimum-add-to-make-parentheses-valid", name: "minimum add to make parentheses valid", tag: "String   Stack   Greedy", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 246, link: "https://leetcode.com/problems/maximum-length-of-pair-chain", name: "maximum length of pair chain", tag: "Array   Dynamic Programming   Greedy   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 247, link: "https://leetcode.com/problems/possible-bipartition", name: "possible bipartition", tag: "Depth-First Search   Breadth-First Search   Union Find   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 248, link: "https://leetcode.com/problems/split-array-into-consecutive-subsequences", name: "split array into consecutive subsequences", tag: "Array   Hash Table   Greedy   Heap (Priority Queue)", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 249, link: "https://leetcode.com/problems/shortest-path-in-binary-matrix", name: "shortest path in binary matrix", tag: "Array   Breadth-First Search   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 250, link: "https://leetcode.com/problems/count-good-nodes-in-binary-tree", name: "count good nodes in binary tree", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 251, link: "https://leetcode.com/problems/next-greater-node-in-linked-list", name: "next greater node in linked list", tag: "Array   Linked List   Stack   Monotonic Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 252, link: "https://leetcode.com/problems/wiggle-sort-ii", name: "wiggle sort ii", tag: "Array   Divide and Conquer   Sorting   Quickselect", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 253, link: "https://leetcode.com/problems/partition-array-for-maximum-sum", name: "partition array for maximum sum", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},      
        {index: 254, link: "https://leetcode.com/problems/longest-arithmetic-subsequence", name: "longest arithmetic subsequence", tag: "Array   Hash Table   Binary Search   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 255, link: "https://leetcode.com/problems/last-stone-weight-ii", name: "last stone weight ii", tag: "Array   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 256, link: "https://leetcode.com/problems/find-bottom-left-tree-value", name: "find bottom left tree value", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 257, link: "https://leetcode.com/problems/regions-cut-by-slashes", name: "regions cut by slashes", tag: "Depth-First Search   Breadth-First Search   Union Find   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 258, link: "https://leetcode.com/problems/beautiful-arrangement", name: "beautiful arrangement", tag: "Array   Dynamic Programming   Backtracking   Bit Manipulation   Bitmask", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 259, link: "https://leetcode.com/problems/minimum-falling-path-sum", name: "minimum falling path sum", tag: "Array   Dynamic Programming   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 260, link: "https://leetcode.com/problems/diagonal-traverse", name: "diagonal traverse", tag: "Array   Matrix   Simulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 261, link: "https://leetcode.com/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit", name: "longest continuous subarray with absolute diff less than or equal to limit", tag: "Array   Queue   Sliding Window   Heap (Priority Queue)   Ordered Set   Monotonic Queue", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 262, link: "https://leetcode.com/problems/next-greater-element-iii", name: "next greater element iii", tag: "Math   Two Pointers   String", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 263, link: "https://leetcode.com/problems/path-with-minimum-effort", name: "path with minimum effort", tag: "Array   Binary Search   Depth-First Search   Breadth-First Search   Union Find   Heap (Priority Queue)   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 264, link: "https://leetcode.com/problems/search-suggestions-system", name: "search suggestions system", tag: "Array   String   Trie", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 265, link: "https://leetcode.com/problems/time-based-key-value-store", name: "time based key value store", tag: "Hash Table   String   Binary Search   Design", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 266, link: "https://leetcode.com/problems/insertion-sort-list", name: "insertion sort list", tag: "Linked List   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 267, link: "https://leetcode.com/problems/string-compression", name: "string compression", tag: "Two Pointers   String", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 268, link: "https://leetcode.com/problems/factorial-trailing-zeroes", name: "factorial trailing zeroes", tag: "Math", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 269, link: "https://leetcode.com/problems/car-pooling", name: "car pooling", tag: "Array   Sorting   Heap (Priority Queue)   Simulation   Prefix Sum", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},        
        {index: 270, link: "https://leetcode.com/problems/find-largest-value-in-each-tree-row", name: "find largest value in each tree row", tag: "Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 271, link: "https://leetcode.com/problems/number-of-dice-rolls-with-target-sum", name: "number of dice rolls with target sum", tag: "Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},    
        {index: 272, link: "https://leetcode.com/problems/design-twitter", name: "design twitter", tag: "Hash Table   Linked List   Design   Heap (Priority Queue)", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 273, link: "https://leetcode.com/problems/array-nesting", name: "array nesting", tag: "Array   Depth-First Search", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 274, link: "https://leetcode.com/problems/stone-game", name: "stone game", tag: "Array   Math   Dynamic Programming   Game Theory", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 275, link: "https://leetcode.com/problems/smallest-subtree-with-all-the-deepest-nodes", name: "smallest subtree with all the deepest nodes", tag: "Hash Table   Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 276, link: "https://leetcode.com/problems/knight-probability-in-chessboard", name: "knight probability in chessboard", tag: "Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 277, link: "https://leetcode.com/problems/my-calendar-i", name: "my calendar i", tag: "Design   Segment Tree   Ordered Set", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 278, link: "https://leetcode.com/problems/minimum-ascii-delete-sum-for-two-strings", name: "minimum ascii delete sum for two strings", tag: "String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 279, link: "https://leetcode.com/problems/check-completeness-of-a-binary-tree", name: "check completeness of a binary tree", tag: "Tree   Breadth-First Search   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 280, link: "https://leetcode.com/problems/maximize-distance-to-closest-person", name: "maximize distance to closest person", tag: "Array", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 281, link: "https://leetcode.com/problems/can-i-win", name: "can i win", tag: "Math   Dynamic Programming   Bit Manipulation   Memoization   Game Theory   Bitmask", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 282, link: "https://leetcode.com/problems/custom-sort-string", name: "custom sort string", tag: "Hash Table   String   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 283, link: "https://leetcode.com/problems/brick-wall", name: "brick wall", tag: "Array   Hash Table", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 284, link: "https://leetcode.com/problems/find-eventual-safe-states", name: "find eventual safe states", tag: "Depth-First Search   Breadth-First Search   Graph   Topological Sort", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 285, link: "https://leetcode.com/problems/reveal-cards-in-increasing-order", name: "reveal cards in increasing order", tag: "Array   Queue   Sorting   Simulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 286, link: "https://leetcode.com/problems/boats-to-save-people", name: "boats to save people", tag: "Array   Two Pointers   Greedy   Sorting", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 287, link: "https://leetcode.com/problems/construct-binary-tree-from-preorder-and-postorder-traversal", name: "construct binary tree from preorder and postorder traversal", tag: "Array   Hash Table   Divide and Conquer   Tree   Binary Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 288, link: "https://leetcode.com/problems/count-number-of-teams", name: "count number of teams", tag: "Array   Dynamic Programming   Binary Indexed Tree", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},    
        {index: 289, link: "https://leetcode.com/problems/repeated-dna-sequences", name: "repeated dna sequences", tag: "Hash Table   String   Bit Manipulation   Sliding Window   Rolling Hash   Hash Function", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 290, link: "https://leetcode.com/problems/find-and-replace-pattern", name: "find and replace pattern", tag: "Array   Hash Table   String", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 291, link: "https://leetcode.com/problems/number-of-operations-to-make-network-connected", name: "number of operations to make network connected", tag: "Depth-First Search   Breadth-First Search   Union Find   Graph", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 292, link: "https://leetcode.com/problems/sort-an-array", name: "sort an array", tag: "Array   Divide and Conquer   Sorting   Heap (Priority Queue)   Merge Sort   Bucket Sort   Radix Sort   Counting Sort", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 293, link: "https://leetcode.com/problems/path-with-maximum-gold", name: "path with maximum gold", tag: "Array   Backtracking   Matrix", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 294, link: "https://leetcode.com/problems/split-linked-list-in-parts", name: "split linked list in parts", tag: "Linked List", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 295, link: "https://leetcode.com/problems/longest-mountain-in-array", name: "longest mountain in array", tag: "Array   Two Pointers   Dynamic Programming   Enumeration", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 296, link: "https://leetcode.com/problems/maximum-product-of-word-lengths", name: "maximum product of word lengths", tag: "Array   String   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 297, link: "https://leetcode.com/problems/max-chunks-to-make-sorted", name: "max chunks to make sorted", tag: "Array   Stack   Greedy   Sorting   Monotonic Stack", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 298, link: "https://leetcode.com/problems/flip-string-to-monotone-increasing", name: "flip string to monotone increasing", tag: "String   Dynamic Programming", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
        {index: 299, link: "https://leetcode.com/problems/maximum-length-of-a-concatenated-string-with-unique-characters", name: "maximum length of a concatenated string with unique characters", tag: "Array   String   Backtracking   Bit Manipulation", difficult: "medium", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 50},
    ],
    //difficult: hard
    [
        {index: 0, link: "https://leetcode.com/problems/trapping-rain-water", name: "trapping rain water", tag: "Array   Two Pointers   Dynamic Programming   Stack   Monotonic Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 1, link: "https://leetcode.com/problems/median-of-two-sorted-arrays", name: "median of two sorted arrays", tag: "Array   Binary Search   Divide and Conquer", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},  
        {index: 2, link: "https://leetcode.com/problems/merge-k-sorted-lists", name: "merge k sorted lists", tag: "Linked List   Divide and Conquer   Heap (Priority Queue)   Merge Sort", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 3, link: "https://leetcode.com/problems/minimum-window-substring", name: "minimum window substring", tag: "Hash Table   String   Sliding Window", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 4, link: "https://leetcode.com/problems/sliding-window-maximum", name: "sliding window maximum", tag: "Array   Queue   Sliding Window   Heap (Priority Queue)   Monotonic Queue", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 5, link: "https://leetcode.com/problems/largest-rectangle-in-histogram", name: "largest rectangle in histogram", tag: "Array   Stack   Monotonic Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},       
        {index: 6, link: "https://leetcode.com/problems/first-missing-positive", name: "first missing positive", tag: "Array   Hash Table", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 7, link: "https://leetcode.com/problems/binary-tree-maximum-path-sum", name: "binary tree maximum path sum", tag: "Dynamic Programming   Tree   Depth-First Search   Binary Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 8, link: "https://leetcode.com/problems/edit-distance", name: "edit distance", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 9, link: "https://leetcode.com/problems/regular-expression-matching", name: "regular expression matching", tag: "String   Dynamic Programming   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},    
        {index: 10, link: "https://leetcode.com/problems/longest-valid-parentheses", name: "longest valid parentheses", tag: "String   Dynamic Programming   Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 11, link: "https://leetcode.com/problems/word-ladder", name: "word ladder", tag: "Hash Table   String   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 12, link: "https://leetcode.com/problems/find-median-from-data-stream", name: "find median from data stream", tag: "Two Pointers   Design   Sorting   Heap (Priority Queue)   Data Stream", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 13, link: "https://leetcode.com/problems/maximal-rectangle", name: "maximal rectangle", tag: "Array   Dynamic Programming   Stack   Matrix   Monotonic Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100}, 
        {index: 14, link: "https://leetcode.com/problems/reverse-nodes-in-k-group", name: "reverse nodes in k group", tag: "Linked List   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 15, link: "https://leetcode.com/problems/serialize-and-deserialize-binary-tree", name: "serialize and deserialize binary tree", tag: "String   Tree   Depth-First Search   Breadth-First Search   Design   Binary Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 16, link: "https://leetcode.com/problems/burst-balloons", name: "burst balloons", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 17, link: "https://leetcode.com/problems/word-search-ii", name: "word search ii", tag: "Array   String   Backtracking   Trie   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 18, link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii", name: "best time to buy and sell stock iii", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 19, link: "https://leetcode.com/problems/count-of-smaller-numbers-after-self", name: "count of smaller numbers after self", tag: "Array   Binary Search   Divide and Conquer   Binary Indexed Tree   Segment Tree   Merge Sort   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 20, link: "https://leetcode.com/problems/n-queens", name: "n queens", tag: "Array   Backtracking", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 21, link: "https://leetcode.com/problems/longest-increasing-path-in-a-matrix", name: "longest increasing path in a matrix", tag: "Dynamic Programming   Depth-First Search   Breadth-First Search   Graph   Topological Sort   Memoization", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 22, link: "https://leetcode.com/problems/sudoku-solver", name: "sudoku solver", tag: "Array   Backtracking   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 23, link: "https://leetcode.com/problems/remove-invalid-parentheses", name: "remove invalid parentheses", tag: "String   Backtracking   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100}, 
        {index: 24, link: "https://leetcode.com/problems/word-break-ii", name: "word break ii", tag: "Hash Table   String   Dynamic Programming   Backtracking   Trie   Memoization", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 25, link: "https://leetcode.com/problems/wildcard-matching", name: "wildcard matching", tag: "String   Dynamic Programming   Greedy   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 26, link: "https://leetcode.com/problems/split-array-largest-sum", name: "split array largest sum", tag: "Array   Binary Search   Dynamic Programming   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 27, link: "https://leetcode.com/problems/dungeon-game", name: "dungeon game", tag: "Array   Dynamic Programming   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 28, link: "https://leetcode.com/problems/reconstruct-itinerary", name: "reconstruct itinerary", tag: "Depth-First Search   Graph   Eulerian Circuit", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 29, link: "https://leetcode.com/problems/the-skyline-problem", name: "the skyline problem", tag: "Array   Divide and Conquer   Binary Indexed Tree   Segment Tree   Line Sweep   Heap (Priority Queue)   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 30, link: "https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv", name: "best time to buy and sell stock iv", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},  
        {index: 31, link: "https://leetcode.com/problems/word-ladder-ii", name: "word ladder ii", tag: "Hash Table   String   Backtracking   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 32, link: "https://leetcode.com/problems/critical-connections-in-a-network", name: "critical connections in a network", tag: "Depth-First Search   Graph   Biconnected Component", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 33, link: "https://leetcode.com/problems/basic-calculator", name: "basic calculator", tag: "Math   String   Stack   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 34, link: "https://leetcode.com/problems/permutation-sequence", name: "permutation sequence", tag: "Math   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 35, link: "https://leetcode.com/problems/distinct-subsequences", name: "distinct subsequences", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 36, link: "https://leetcode.com/problems/palindrome-partitioning-ii", name: "palindrome partitioning ii", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 37, link: "https://leetcode.com/problems/lfu-cache", name: "lfu cache", tag: "Hash Table   Linked List   Design   Doubly-Linked List", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 38, link: "https://leetcode.com/problems/russian-doll-envelopes", name: "russian doll envelopes", tag: "Array   Binary Search   Dynamic Programming   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 39, link: "https://leetcode.com/problems/maximum-profit-in-job-scheduling", name: "maximum profit in job scheduling", tag: "Array   Binary Search   Dynamic Programming   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 40, link: "https://leetcode.com/problems/subarrays-with-k-different-integers", name: "subarrays with k different integers", tag: "Array   Hash Table   Sliding Window   Counting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 41, link: "https://leetcode.com/problems/shortest-subarray-with-sum-at-least-k", name: "shortest subarray with sum at least k", tag: "Array   Binary Search   Queue   Sliding Window   Heap (Priority Queue)   Prefix Sum   Monotonic Queue", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 42, link: "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii", name: "find minimum in rotated sorted array ii", tag: "Array   Binary Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 43, link: "https://leetcode.com/problems/unique-paths-iii", name: "unique paths iii", tag: "Array   Backtracking   Bit Manipulation   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 44, link: "https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree", name: "vertical order traversal of a binary tree", tag: "Hash Table   Tree   Depth-First Search   Breadth-First Search   Binary Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 45, link: "https://leetcode.com/problems/candy", name: "candy", tag: "Array   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 46, link: "https://leetcode.com/problems/palindrome-pairs", name: "palindrome pairs", tag: "Array   Hash Table   String   Trie", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 47, link: "https://leetcode.com/problems/trapping-rain-water-ii", name: "trapping rain water ii", tag: "Array   Breadth-First Search   Heap (Priority Queue)   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 48, link: "https://leetcode.com/problems/maximum-frequency-stack", name: "maximum frequency stack", tag: "Hash Table   Stack   Design   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 49, link: "https://leetcode.com/problems/binary-tree-cameras", name: "binary tree cameras", tag: "Dynamic Programming   Tree   Depth-First Search   Binary Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 50, link: "https://leetcode.com/problems/expression-add-operators", name: "expression add operators", tag: "Math   String   Backtracking", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 51, link: "https://leetcode.com/problems/reverse-pairs", name: "reverse pairs", tag: "Array   Binary Search   Divide and Conquer   Binary Indexed Tree   Segment Tree   Merge Sort   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 52, link: "https://leetcode.com/problems/sum-of-distances-in-tree", name: "sum of distances in tree", tag: "Dynamic Programming   Tree   Depth-First Search   Graph", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 53, link: "https://leetcode.com/problems/minimum-number-of-refueling-stops", name: "minimum number of refueling stops", tag: "Array   Dynamic Programming   Greedy   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 54, link: "https://leetcode.com/problems/cherry-pickup", name: "cherry pickup", tag: "Array   Dynamic Programming   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 55, link: "https://leetcode.com/problems/shortest-palindrome", name: "shortest palindrome", tag: "String   Rolling Hash   String Matching   Hash Function", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},    
        {index: 56, link: "https://leetcode.com/problems/frog-jump", name: "frog jump", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 57, link: "https://leetcode.com/problems/super-egg-drop", name: "super egg drop", tag: "Math   Binary Search   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 58, link: "https://leetcode.com/problems/making-a-large-island", name: "making a large island", tag: "Array   Depth-First Search   Breadth-First Search   Union Find   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 59, link: "https://leetcode.com/problems/sliding-window-median", name: "sliding window median", tag: "Array   Hash Table   Sliding Window   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 60, link: "https://leetcode.com/problems/minimum-swaps-to-make-sequences-increasing", name: "minimum swaps to make sequences increasing", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 61, link: "https://leetcode.com/problems/smallest-range-covering-elements-from-k-lists", name: "smallest range covering elements from k lists", tag: "Array   Hash Table   Greedy   Sliding Window   Sorting   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 62, link: "https://leetcode.com/problems/integer-to-english-words", name: "integer to english words", tag: "Math   String   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 63, link: "https://leetcode.com/problems/maximum-gap", name: "maximum gap", tag: "Array   Sorting   Bucket Sort   Radix Sort", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 64, link: "https://leetcode.com/problems/max-sum-of-rectangle-no-larger-than-k", name: "max sum of rectangle no larger than k", tag: "Array   Binary Search   Dynamic Programming   Matrix   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 65, link: "https://leetcode.com/problems/shortest-common-supersequence", name: "shortest common supersequence", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 66, link: "https://leetcode.com/problems/course-schedule-iii", name: "course schedule iii", tag: "Array   Greedy   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 67, link: "https://leetcode.com/problems/find-k-th-smallest-pair-distance", name: "find k th smallest pair distance", tag: "Array   Two Pointers   Binary Search   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 68, link: "https://leetcode.com/problems/shortest-path-in-a-grid-with-obstacles-elimination", name: "shortest path in a grid with obstacles elimination", tag: "Array   Breadth-First Search   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 69, link: "https://leetcode.com/problems/concatenated-words", name: "concatenated words", tag: "Array   String   Dynamic Programming   Depth-First Search   Trie", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 70, link: "https://leetcode.com/problems/substring-with-concatenation-of-all-words", name: "substring with concatenation of all words", tag: "Hash Table   String   Sliding Window", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 71, link: "https://leetcode.com/problems/bus-routes", name: "bus routes", tag: "Array   Hash Table   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 72, link: "https://leetcode.com/problems/swim-in-rising-water", name: "swim in rising water", tag: "Array   Binary Search   Depth-First Search   Breadth-First Search   Union Find   Heap (Priority Queue)   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 73, link: "https://leetcode.com/problems/longest-duplicate-substring", name: "longest duplicate substring", tag: "String   Binary Search   Sliding Window   Rolling Hash   Suffix Array   Hash Function", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 74, link: "https://leetcode.com/problems/maximum-sum-of-3-non-overlapping-subarrays", name: "maximum sum of 3 non overlapping subarrays", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 75, link: "https://leetcode.com/problems/text-justification", name: "text justification", tag: "Array   String   Simulation", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 76, link: "https://leetcode.com/problems/kth-smallest-number-in-multiplication-table", name: "kth smallest number in multiplication table", tag: "Binary Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 77, link: "https://leetcode.com/problems/minimum-cost-to-hire-k-workers", name: "minimum cost to hire k workers", tag: "Array   Greedy   Sorting   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 78, link: "https://leetcode.com/problems/insert-delete-getrandom-o1-duplicates-allowed", name: "insert delete getrandom o1 duplicates allowed", tag: "Array   Hash Table   Math   Design   Randomized", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 79, link: "https://leetcode.com/problems/couples-holding-hands", name: "couples holding hands", tag: "Greedy   Depth-First Search   Breadth-First Search   Union Find   Graph", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 80, link: "https://leetcode.com/problems/number-of-submatrices-that-sum-to-target", name: "number of submatrices that sum to target", tag: "Array   Hash Table   Matrix   Prefix Sum", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 81, link: "https://leetcode.com/problems/stream-of-characters", name: "stream of characters", tag: "Array   String   Design   Trie   Data Stream", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 82, link: "https://leetcode.com/problems/redundant-connection-ii", name: "redundant connection ii", tag: "Depth-First Search   Breadth-First Search   Union Find   Graph", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 83, link: "https://leetcode.com/problems/n-queens-ii", name: "n queens ii", tag: "Backtracking", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 84, link: "https://leetcode.com/problems/remove-boxes", name: "remove boxes", tag: "Array   Dynamic Programming   Memoization", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 85, link: "https://leetcode.com/problems/minimum-cost-to-merge-stones", name: "minimum cost to merge stones", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 86, link: "https://leetcode.com/problems/count-of-range-sum", name: "count of range sum", tag: "Array   Binary Search   Divide and Conquer   Binary Indexed Tree   Segment Tree   Merge Sort   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 87, link: "https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome", name: "minimum insertion steps to make a string palindrome", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 88, link: "https://leetcode.com/problems/sliding-puzzle", name: "sliding puzzle", tag: "Array   Breadth-First Search   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 89, link: "https://leetcode.com/problems/minimum-number-of-taps-to-open-to-water-a-garden", name: "minimum number of taps to open to water a garden", tag: "Array   Dynamic Programming   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 90, link: "https://leetcode.com/problems/shortest-path-visiting-all-nodes", name: "shortest path visiting all nodes", tag: "Dynamic Programming   Bit Manipulation   Breadth-First Search   Graph   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 91, link: "https://leetcode.com/problems/scramble-string", name: "scramble string", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 92, link: "https://leetcode.com/problems/odd-even-jump", name: "odd even jump", tag: "Array   Dynamic Programming   Stack   Monotonic Stack   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},    
        {index: 93, link: "https://leetcode.com/problems/arithmetic-slices-ii-subsequence", name: "arithmetic slices ii subsequence", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},      
        {index: 94, link: "https://leetcode.com/problems/create-maximum-number", name: "create maximum number", tag: "Stack   Greedy   Monotonic Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 95, link: "https://leetcode.com/problems/largest-component-size-by-common-factor", name: "largest component size by common factor", tag: "Array   Math   Union Find", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 96, link: "https://leetcode.com/problems/count-different-palindromic-subsequences", name: "count different palindromic subsequences", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 97, link: "https://leetcode.com/problems/guess-the-word", name: "guess the word", tag: "Array   Math   String   Interactive   Game Theory", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 98, link: "https://leetcode.com/problems/24-game", name: "24 game", tag: "Array   Math   Backtracking", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 99, link: "https://leetcode.com/problems/maximum-performance-of-a-team", name: "maximum performance of a team", tag: "Array   Greedy   Sorting   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 100, link: "https://leetcode.com/problems/patching-array", name: "patching array", tag: "Array   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 101, link: "https://leetcode.com/problems/cherry-pickup-ii", name: "cherry pickup ii", tag: "Array   Dynamic Programming   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 102, link: "https://leetcode.com/problems/minimum-difficulty-of-a-job-schedule", name: "minimum difficulty of a job schedule", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 103, link: "https://leetcode.com/problems/numbers-at-most-n-given-digit-set", name: "numbers at most n given digit set", tag: "Array   Math   Binary Search   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 104, link: "https://leetcode.com/problems/number-of-valid-words-for-each-puzzle", name: "number of valid words for each puzzle", tag: "Array   Hash Table   String   Bit Manipulation   Trie", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 105, link: "https://leetcode.com/problems/non-negative-integers-without-consecutive-ones", name: "non negative integers without consecutive ones", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 106, link: "https://leetcode.com/problems/student-attendance-record-ii", name: "student attendance record ii", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 107, link: "https://leetcode.com/problems/all-oone-data-structure", name: "all oone data structure", tag: "Hash Table   Linked List   Design   Doubly-Linked List", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 108, link: "https://leetcode.com/problems/max-chunks-to-make-sorted-ii", name: "max chunks to make sorted ii", tag: "Array   Stack   Greedy   Sorting   Monotonic Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 109, link: "https://leetcode.com/problems/decode-ways-ii", name: "decode ways ii", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 110, link: "https://leetcode.com/problems/distinct-subsequences-ii", name: "distinct subsequences ii", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 111, link: "https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string", name: "count unique characters of all substrings of a given string", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 112, link: "https://leetcode.com/problems/find-the-shortest-superstring", name: "find the shortest superstring", tag: "Array   String   Dynamic Programming   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 113, link: "https://leetcode.com/problems/find-in-mountain-array", name: "find in mountain array", tag: "Array   Binary Search   Interactive", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 114, link: "https://leetcode.com/problems/recover-a-tree-from-preorder-traversal", name: "recover a tree from preorder traversal", tag: "String   Tree   Depth-First Search   Binary Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 115, link: "https://leetcode.com/problems/prefix-and-suffix-search", name: "prefix and suffix search", tag: "String   Design   Trie", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 116, link: "https://leetcode.com/problems/jump-game-iv", name: "jump game iv", tag: "Array   Hash Table   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 117, link: "https://leetcode.com/problems/minimum-cost-to-cut-a-stick", name: "minimum cost to cut a stick", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 118, link: "https://leetcode.com/problems/nth-magical-number", name: "nth magical number", tag: "Math   Binary Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 119, link: "https://leetcode.com/problems/consecutive-numbers-sum", name: "consecutive numbers sum", tag: "Math   Enumeration", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 120, link: "https://leetcode.com/problems/minimum-cost-to-make-at-least-one-valid-path-in-a-grid", name: "minimum cost to make at least one valid path in a grid", tag: "Array   Breadth-First Search   Graph   Heap (Priority Queue)   Matrix   Shortest Path", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 121, link: "https://leetcode.com/problems/reaching-points", name: "reaching points", tag: "Math", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 122, link: "https://leetcode.com/problems/count-vowels-permutation", name: "count vowels permutation", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 123, link: "https://leetcode.com/problems/maximum-sum-bst-in-binary-tree", name: "maximum sum bst in binary tree", tag: "Dynamic Programming   Tree   Depth-First Search   Binary Search Tree   Binary Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 124, link: "https://leetcode.com/problems/stone-game-iii", name: "stone game iii", tag: "Array   Math   Dynamic Programming   Game Theory", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 125, link: "https://leetcode.com/problems/range-module", name: "range module", tag: "Design   Segment Tree   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 126, link: "https://leetcode.com/problems/number-of-atoms", name: "number of atoms", tag: "Hash Table   String   Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 127, link: "https://leetcode.com/problems/kth-ancestor-of-a-tree-node", name: "kth ancestor of a tree node", tag: "Binary Search   Dynamic Programming   Tree   Depth-First Search   Breadth-First Search   Design", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 128, link: "https://leetcode.com/problems/cut-off-trees-for-golf-event", name: "cut off trees for golf event", tag: "Array   Breadth-First Search   Heap (Priority Queue)   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 129, link: "https://leetcode.com/problems/race-car", name: "race car", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 130, link: "https://leetcode.com/problems/reducing-dishes", name: "reducing dishes", tag: "Array   Dynamic Programming   Greedy   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 131, link: "https://leetcode.com/problems/k-similar-strings", name: "k similar strings", tag: "String   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 132, link: "https://leetcode.com/problems/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows", name: "find the kth smallest sum of a matrix with sorted rows", tag: "Array   Binary Search   Heap (Priority Queue)   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 133, link: "https://leetcode.com/problems/rectangle-area-ii", name: "rectangle area ii", tag: "Array   Segment Tree   Line Sweep   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 134, link: "https://leetcode.com/problems/split-array-with-same-average", name: "split array with same average", tag: "Array   Math   Dynamic Programming   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 135, link: "https://leetcode.com/problems/strange-printer", name: "strange printer", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 136, link: "https://leetcode.com/problems/minimum-number-of-increments-on-subarrays-to-form-a-target-array", name: "minimum number of increments on subarrays to form a target array", tag: "Array   Dynamic Programming   Stack   Greedy   Monotonic Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 137, link: "https://leetcode.com/problems/k-inverse-pairs-array", name: "k inverse pairs array", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 138, link: "https://leetcode.com/problems/max-points-on-a-line", name: "max points on a line", tag: "Hash Table   Math   Geometry", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 139, link: "https://leetcode.com/problems/max-value-of-equation", name: "max value of equation", tag: "Array   Queue   Sliding Window   Heap (Priority Queue)   Monotonic Queue", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 140, link: "https://leetcode.com/problems/bricks-falling-when-hit", name: "bricks falling when hit", tag: "Array   Union Find   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 141, link: "https://leetcode.com/problems/shortest-path-to-get-all-keys", name: "shortest path to get all keys", tag: "Bit Manipulation   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 142, link: "https://leetcode.com/problems/minimum-number-of-k-consecutive-bit-flips", name: "minimum number of k consecutive bit flips", tag: "Array   Bit Manipulation   Sliding Window   Prefix Sum", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 143, link: "https://leetcode.com/problems/minimum-distance-to-type-a-word-using-two-fingers", name: "minimum distance to type a word using two fingers", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 144, link: "https://leetcode.com/problems/number-of-ways-to-paint-n-3-grid", name: "number of ways to paint n 3 grid", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 145, link: "https://leetcode.com/problems/similar-string-groups", name: "similar string groups", tag: "String   Depth-First Search   Breadth-First Search   Union Find", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 146, link: "https://leetcode.com/problems/ipo", name: "ipo", tag: "Array   Greedy   Sorting   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 147, link: "https://leetcode.com/problems/constrained-subsequence-sum", name: "constrained subsequence sum", tag: "Array   Dynamic Programming   Queue   Sliding Window   Heap (Priority Queue)   Monotonic Queue", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 148, link: "https://leetcode.com/problems/k-th-smallest-prime-fraction", name: "k th smallest prime fraction", tag: "Array   Binary Search   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 149, link: "https://leetcode.com/problems/three-equal-parts", name: "three equal parts", tag: "Array   Math", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 150, link: "https://leetcode.com/problems/my-calendar-iii", name: "my calendar iii", tag: "Design   Segment Tree   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 151, link: "https://leetcode.com/problems/stickers-to-spell-word", name: "stickers to spell word", tag: "Dynamic Programming   Backtracking   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 152, link: "https://leetcode.com/problems/number-of-music-playlists", name: "number of music playlists", tag: "Math   Dynamic Programming   Combinatorics", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 153, link: "https://leetcode.com/problems/smallest-sufficient-team", name: "smallest sufficient team", tag: "Array   Dynamic Programming   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 154, link: "https://leetcode.com/problems/freedom-trail", name: "freedom trail", tag: "String   Dynamic Programming   Depth-First Search   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 155, link: "https://leetcode.com/problems/dice-roll-simulation", name: "dice roll simulation", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 156, link: "https://leetcode.com/problems/palindrome-partitioning-iii", name: "palindrome partitioning iii", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 157, link: "https://leetcode.com/problems/construct-target-array-with-multiple-sums", name: "construct target array with multiple sums", tag: "Array   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 158, link: "https://leetcode.com/problems/minimum-falling-path-sum-ii", name: "minimum falling path sum ii", tag: "Array   Dynamic Programming   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},      
        {index: 159, link: "https://leetcode.com/problems/allocate-mailboxes", name: "allocate mailboxes", tag: "Array   Math   Dynamic Programming   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 160, link: "https://leetcode.com/problems/poor-pigs", name: "poor pigs", tag: "Math   Dynamic Programming   Combinatorics", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 161, link: "https://leetcode.com/problems/number-of-squareful-arrays", name: "number of squareful arrays", tag: "Array   Math   Dynamic Programming   Backtracking   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 162, link: "https://leetcode.com/problems/number-of-digit-one", name: "number of digit one", tag: "Math   Dynamic Programming   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 163, link: "https://leetcode.com/problems/tallest-billboard", name: "tallest billboard", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 164, link: "https://leetcode.com/problems/minimum-number-of-days-to-eat-n-oranges", name: "minimum number of days to eat n oranges", tag: "Dynamic Programming   Memoization", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 165, link: "https://leetcode.com/problems/cat-and-mouse", name: "cat and mouse", tag: "Math   Dynamic Programming   Breadth-First Search   Graph   Memoization   Game Theory", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 166, link: "https://leetcode.com/problems/data-stream-as-disjoint-intervals", name: "data stream as disjoint intervals", tag: "Binary Search   Design   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 167, link: "https://leetcode.com/problems/minimum-moves-to-move-a-box-to-their-target-location", name: "minimum moves to move a box to their target location", tag: "Array   Breadth-First Search   Heap (Priority Queue)   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 168, link: "https://leetcode.com/problems/jump-game-v", name: "jump game v", tag: "Array   Dynamic Programming   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 169, link: "https://leetcode.com/problems/perfect-rectangle", name: "perfect rectangle", tag: "Array   Line Sweep", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 170, link: "https://leetcode.com/problems/longest-happy-prefix", name: "longest happy prefix", tag: "String   Rolling Hash   String Matching   Hash Function", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100}, 
        {index: 171, link: "https://leetcode.com/problems/minimum-number-of-removals-to-make-mountain-array", name: "minimum number of removals to make mountain array", tag: "Array   Binary Search   Dynamic Programming   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 172, link: "https://leetcode.com/problems/make-array-strictly-increasing", name: "make array strictly increasing", tag: "Array   Binary Search   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 173, link: "https://leetcode.com/problems/random-pick-with-blacklist", name: "random pick with blacklist", tag: "Hash Table   Math   Binary Search   Sorting   Randomized", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 174, link: "https://leetcode.com/problems/minimize-malware-spread", name: "minimize malware spread", tag: "Array   Depth-First Search   Breadth-First Search   Union Find   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 175, link: "https://leetcode.com/problems/rank-transform-of-a-matrix", name: "rank transform of a matrix", tag: "Array   Greedy   Union Find   Graph   Topological Sort   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 176, link: "https://leetcode.com/problems/sort-items-by-groups-respecting-dependencies", name: "sort items by groups respecting dependencies", tag: "Depth-First Search   Breadth-First Search   Graph   Topological Sort", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 177, link: "https://leetcode.com/problems/parsing-a-boolean-expression", name: "parsing a boolean expression", tag: "String   Stack   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 178, link: "https://leetcode.com/problems/number-of-visible-people-in-a-queue", name: "number of visible people in a queue", tag: "Array   Stack   Monotonic Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 179, link: "https://leetcode.com/problems/maximum-score-words-formed-by-letters", name: "maximum score words formed by letters", tag: "Array   String   Dynamic Programming   Backtracking   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 180, link: "https://leetcode.com/problems/stone-game-iv", name: "stone game iv", tag: "Math   Dynamic Programming   Game Theory", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 181, link: "https://leetcode.com/problems/number-of-ways-to-wear-different-hats-to-each-other", name: "number of ways to wear different hats to each other", tag: "Array   Dynamic Programming   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 182, link: "https://leetcode.com/problems/erect-the-fence", name: "erect the fence", tag: "Array   Math   Geometry", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 183, link: "https://leetcode.com/problems/max-dot-product-of-two-subsequences", name: "max dot product of two subsequences", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 184, link: "https://leetcode.com/problems/orderly-queue", name: "orderly queue", tag: "Math   String   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 185, link: "https://leetcode.com/problems/parallel-courses-ii", name: "parallel courses ii", tag: "Dynamic Programming   Bit Manipulation   Graph   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},  
        {index: 186, link: "https://leetcode.com/problems/maximum-students-taking-exam", name: "maximum students taking exam", tag: "Array   Dynamic Programming   Bit Manipulation   Matrix   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 187, link: "https://leetcode.com/problems/car-fleet-ii", name: "car fleet ii", tag: "Array   Math   Stack   Heap (Priority Queue)   Monotonic Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 188, link: "https://leetcode.com/problems/remove-max-number-of-edges-to-keep-graph-fully-traversable", name: "remove max number of edges to keep graph fully traversable", tag: "Union Find   Graph", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 189, link: "https://leetcode.com/problems/k-th-smallest-in-lexicographical-order", name: "k th smallest in lexicographical order", tag: "Trie", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 190, link: "https://leetcode.com/problems/stamping-the-sequence", name: "stamping the sequence", tag: "String   Stack   Greedy   Queue", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 191, link: "https://leetcode.com/problems/minimize-deviation-in-array", name: "minimize deviation in array", tag: "Array   Greedy   Heap (Priority Queue)   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 192, link: "https://leetcode.com/problems/get-the-maximum-score", name: "get the maximum score", tag: "Array   Two Pointers   Dynamic Programming   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},   
        {index: 193, link: "https://leetcode.com/problems/special-binary-string", name: "special binary string", tag: "String   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 194, link: "https://leetcode.com/problems/super-washing-machines", name: "super washing machines", tag: "Array   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 195, link: "https://leetcode.com/problems/pizza-with-3n-slices", name: "pizza with 3n slices", tag: "Array   Dynamic Programming   Greedy   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 196, link: "https://leetcode.com/problems/number-of-ways-to-stay-in-the-same-place-after-some-steps", name: "number of ways to stay in the same place after some steps", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 197, link: "https://leetcode.com/problems/reachable-nodes-in-subdivided-graph", name: "reachable nodes in subdivided graph", tag: "Graph   Heap (Priority Queue)   Shortest Path", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 198, link: "https://leetcode.com/problems/paint-house-iii", name: "paint house iii", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 199, link: "https://leetcode.com/problems/maximum-score-of-a-good-subarray", name: "maximum score of a good subarray", tag: "Array   Two Pointers   Binary Search   Stack   Monotonic Stack", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 200, link: "https://leetcode.com/problems/find-longest-awesome-substring", name: "find longest awesome substring", tag: "Hash Table   String   Bit Manipulation", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 201, link: "https://leetcode.com/problems/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix", name: "minimum number of flips to convert binary matrix to zero matrix", tag: "Array   Bit Manipulation   Breadth-First Search   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 202, link: "https://leetcode.com/problems/form-largest-integer-with-digits-that-add-up-to-target", name: "form largest integer with digits that add up to target", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 203, link: "https://leetcode.com/problems/count-all-valid-pickup-and-delivery-options", name: "count all valid pickup and delivery options", tag: "Math   Dynamic Programming   Combinatorics", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 204, link: "https://leetcode.com/problems/find-the-closest-palindrome", name: "find the closest palindrome", tag: "Math   String", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 205, link: "https://leetcode.com/problems/strong-password-checker", name: "strong password checker", tag: "String   Greedy   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 206, link: "https://leetcode.com/problems/create-sorted-array-through-instructions", name: "create sorted array through instructions", tag: "Array   Binary Search   Divide and Conquer   Binary Indexed Tree   Segment Tree   Merge Sort   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 207, link: "https://leetcode.com/problems/sum-of-subsequence-widths", name: "sum of subsequence widths", tag: "Array   Math   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 208, link: "https://leetcode.com/problems/valid-permutations-for-di-sequence", name: "valid permutations for di sequence", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 209, link: "https://leetcode.com/problems/find-minimum-time-to-finish-all-jobs", name: "find minimum time to finish all jobs", tag: "Array   Dynamic Programming   Backtracking   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 210, link: "https://leetcode.com/problems/maximum-number-of-non-overlapping-substrings", name: "maximum number of non overlapping substrings", tag: "String   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 211, link: "https://leetcode.com/problems/set-intersection-size-at-least-two", name: "set intersection size at least two", tag: "Array   Greedy   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},    
        {index: 212, link: "https://leetcode.com/problems/online-majority-element-in-subarray", name: "online majority element in subarray", tag: "Array   Binary Search   Design   Binary Indexed Tree   Segment Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 213, link: "https://leetcode.com/problems/falling-squares", name: "falling squares", tag: "Array   Segment Tree   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 214, link: "https://leetcode.com/problems/last-substring-in-lexicographical-order", name: "last substring in lexicographical order", tag: "Two Pointers   String", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 215, link: "https://leetcode.com/problems/checking-existence-of-edge-length-limited-paths", name: "checking existence of edge length limited paths", tag: "Array   Union Find   Graph   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 216, link: "https://leetcode.com/problems/escape-a-large-maze", name: "escape a large maze", tag: "Array   Hash Table   Depth-First Search   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 217, link: "https://leetcode.com/problems/tiling-a-rectangle-with-the-fewest-squares", name: "tiling a rectangle with the fewest squares", tag: "Dynamic Programming   Backtracking", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 218, link: "https://leetcode.com/problems/string-compression-ii", name: "string compression ii", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 219, link: "https://leetcode.com/problems/number-of-ways-to-rearrange-sticks-with-k-sticks-visible", name: "number of ways to rearrange sticks with k sticks visible", tag: "Math   Dynamic Programming   Combinatorics", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 220, link: "https://leetcode.com/problems/maximum-height-by-stacking-cuboids", name: "maximum height by stacking cuboids", tag: "Array   Dynamic Programming   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 221, link: "https://leetcode.com/problems/number-of-ways-of-cutting-a-pizza", name: "number of ways of cutting a pizza", tag: "Array   Dynamic Programming   Memoization   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 222, link: "https://leetcode.com/problems/palindrome-partitioning-iv", name: "palindrome partitioning iv", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 223, link: "https://leetcode.com/problems/delete-columns-to-make-sorted-iii", name: "delete columns to make sorted iii", tag: "Array   String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 224, link: "https://leetcode.com/problems/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree", name: "find critical and pseudo critical edges in minimum spanning tree", tag: "Union Find   Graph   Sorting   Minimum Spanning Tree   Strongly Connected Component", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 225, link: "https://leetcode.com/problems/valid-number", name: "valid number", tag: "String", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 226, link: "https://leetcode.com/problems/profitable-schemes", name: "profitable schemes", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 227, link: "https://leetcode.com/problems/longest-chunked-palindrome-decomposition", name: "longest chunked palindrome decomposition", tag: "Two Pointers   String   Dynamic Programming   Greedy   Rolling Hash   Hash Function", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 228, link: "https://leetcode.com/problems/maximum-number-of-events-that-can-be-attended-ii", name: "maximum number of events that can be attended ii", tag: "Array   Binary Search   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 229, link: "https://leetcode.com/problems/build-array-where-you-can-find-the-maximum-exactly-k-comparisons", name: "build array where you can find the maximum exactly k comparisons", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 230, link: "https://leetcode.com/problems/minimize-malware-spread-ii", name: "minimize malware spread ii", tag: "Array   Depth-First Search   Breadth-First Search   Union Find   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 231, link: "https://leetcode.com/problems/closest-subsequence-sum", name: "closest subsequence sum", tag: "Array   Two Pointers   Dynamic Programming   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 232, link: "https://leetcode.com/problems/parse-lisp-expression", name: "parse lisp expression", tag: "Hash Table   String   Stack   Recursion", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 233, link: "https://leetcode.com/problems/largest-color-value-in-a-directed-graph", name: "largest color value in a directed graph", tag: "Hash Table   Dynamic Programming   Graph   Topological Sort   Memoization   Counting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 234, link: "https://leetcode.com/problems/minimum-operations-to-make-the-array-k-increasing", name: "minimum operations to make the array k increasing", tag: "Array   Binary Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 235, link: "https://leetcode.com/problems/numbers-with-repeated-digits", name: "numbers with repeated digits", tag: "Math   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 236, link: "https://leetcode.com/problems/last-day-where-you-can-still-cross", name: "last day where you can still cross", tag: "Array   Binary Search   Depth-First Search   Breadth-First Search   Union Find   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 237, link: "https://leetcode.com/problems/minimum-cost-to-reach-destination-in-time", name: "minimum cost to reach destination in time", tag: "Dynamic Programming   Graph", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 238, link: "https://leetcode.com/problems/minimum-adjacent-swaps-for-k-consecutive-ones", name: "minimum adjacent swaps for k consecutive ones", tag: "Array   Greedy   Sliding Window   Prefix Sum", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 239, link: "https://leetcode.com/problems/grid-illumination", name: "grid illumination", tag: "Array   Hash Table", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 240, link: "https://leetcode.com/problems/minimum-operations-to-make-a-subsequence", name: "minimum operations to make a subsequence", tag: "Array   Hash Table   Binary Search   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 241, link: "https://leetcode.com/problems/number-of-ways-to-reorder-array-to-get-same-bst", name: "number of ways to reorder array to get same bst", tag: "Array   Math   Divide and Conquer   Dynamic Programming   Tree   Union Find   Binary Search Tree   Memoization   Combinatorics   Binary Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 242, link: "https://leetcode.com/problems/largest-multiple-of-three", name: "largest multiple of three", tag: "Array   Dynamic Programming   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 243, link: "https://leetcode.com/problems/design-skiplist", name: "design skiplist", tag: "Linked List   Design", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 244, link: "https://leetcode.com/problems/frog-position-after-t-seconds", name: "frog position after t seconds", tag: "Tree   Depth-First Search   Breadth-First Search   Graph", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 245, link: "https://leetcode.com/problems/maximum-xor-with-an-element-from-array", name: "maximum xor with an element from array", tag: "Array   Bit Manipulation   Trie", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 246, link: "https://leetcode.com/problems/brace-expansion-ii", name: "brace expansion ii", tag: "String   Backtracking   Stack   Breadth-First Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},        
        {index: 247, link: "https://leetcode.com/problems/minimum-xor-sum-of-two-arrays", name: "minimum xor sum of two arrays", tag: "Array   Dynamic Programming   Bit Manipulation   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 248, link: "https://leetcode.com/problems/maximum-equal-frequency", name: "maximum equal frequency", tag: "Array   Hash Table", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 249, link: "https://leetcode.com/problems/minimum-number-of-days-to-disconnect-island", name: "minimum number of days to disconnect island", tag: "Array   Depth-First Search   Breadth-First Search   Matrix   Strongly Connected Component", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 250, link: "https://leetcode.com/problems/zuma-game", name: "zuma game", tag: "String   Dynamic Programming   Breadth-First Search   Memoization", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 251, link: "https://leetcode.com/problems/smallest-rotation-with-highest-score", name: "smallest rotation with highest score", tag: "Array   Prefix Sum", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},      
        {index: 252, link: "https://leetcode.com/problems/restore-the-array", name: "restore the array", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 253, link: "https://leetcode.com/problems/maximize-score-after-n-operations", name: "maximize score after n operations", tag: "Array   Math   Dynamic Programming   Backtracking   Bit Manipulation   Number Theory   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 254, link: "https://leetcode.com/problems/minimum-initial-energy-to-finish-tasks", name: "minimum initial energy to finish tasks", tag: "Array   Greedy   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 255, link: "https://leetcode.com/problems/find-the-longest-valid-obstacle-course-at-each-position", name: "find the longest valid obstacle course at each position", tag: "Array   Binary Search   Binary Indexed Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 256, link: "https://leetcode.com/problems/maximum-number-of-visible-points", name: "maximum number of visible points", tag: "Array   Math   Geometry   Sliding Window   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 257, link: "https://leetcode.com/problems/stone-game-v", name: "stone game v", tag: "Array   Math   Dynamic Programming   Game Theory", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 258, link: "https://leetcode.com/problems/check-if-string-is-transformable-with-substring-sort-operations", name: "check if string is transformable with substring sort operations", tag: "String   Greedy   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 259, link: "https://leetcode.com/problems/count-all-possible-routes", name: "count all possible routes", tag: "Array   Dynamic Programming   Memoization", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},     
        {index: 260, link: "https://leetcode.com/problems/minimum-interval-to-include-each-query", name: "minimum interval to include each query", tag: "Array   Binary Search   Line Sweep   Sorting   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 261, link: "https://leetcode.com/problems/count-number-of-special-subsequences", name: "count number of special subsequences", tag: "Array   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 262, link: "https://leetcode.com/problems/reverse-subarray-to-maximize-array-value", name: "reverse subarray to maximize array value", tag: "Array   Math   Greedy", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 263, link: "https://leetcode.com/problems/maximize-palindrome-length-from-subsequences", name: "maximize palindrome length from subsequences", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 264, link: "https://leetcode.com/problems/find-all-people-with-secret", name: "find all people with secret", tag: "Depth-First Search   Breadth-First Search   Union Find   Graph   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 265, link: "https://leetcode.com/problems/kth-smallest-instructions", name: "kth smallest instructions", tag: "Array   Math   Dynamic Programming   Combinatorics", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 266, link: "https://leetcode.com/problems/dinner-plate-stacks", name: "dinner plate stacks", tag: "Hash Table   Stack   Design   Heap (Priority Queue)", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},       
        {index: 267, link: "https://leetcode.com/problems/number-of-unique-good-subsequences", name: "number of unique good subsequences", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 268, link: "https://leetcode.com/problems/super-palindromes", name: "super palindromes", tag: "Math   Enumeration", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 269, link: "https://leetcode.com/problems/minimum-cost-to-connect-two-groups-of-points", name: "minimum cost to connect two groups of points", tag: "Array   Dynamic Programming   Bit Manipulation   Matrix   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 270, link: "https://leetcode.com/problems/minimum-number-of-operations-to-make-array-continuous", name: "minimum number of operations to make array continuous", tag: "Array   Binary Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 271, link: "https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference", name: "partition array into two arrays to minimize sum difference", tag: "Array   Two Pointers   Binary Search   Dynamic Programming   Bit Manipulation   Ordered Set   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 272, link: "https://leetcode.com/problems/closest-room", name: "closest room", tag: "Array   Binary Search   Sorting", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 273, link: "https://leetcode.com/problems/graph-connectivity-with-threshold", name: "graph connectivity with threshold", tag: "Array   Math   Union Find", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},     
        {index: 274, link: "https://leetcode.com/problems/number-of-paths-with-max-score", name: "number of paths with max score", tag: "Array   Dynamic Programming   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 275, link: "https://leetcode.com/problems/verbal-arithmetic-puzzle", name: "verbal arithmetic puzzle", tag: "Array   Math   String   Backtracking", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 276, link: "https://leetcode.com/problems/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits", name: "minimum possible integer after at most k adjacent swaps on digits", tag: "String   Greedy   Binary Indexed Tree   Segment Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 277, link: "https://leetcode.com/problems/strange-printer-ii", name: "strange printer ii", tag: "Array   Graph   Topological Sort   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 278, link: "https://leetcode.com/problems/count-the-repetitions", name: "count the repetitions", tag: "String   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 279, link: "https://leetcode.com/problems/transform-to-chessboard", name: "transform to chessboard", tag: "Array   Math   Bit Manipulation   Matrix", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 280, link: "https://leetcode.com/problems/preimage-size-of-factorial-zeroes-function", name: "preimage size of factorial zeroes function", tag: "Math   Binary Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 281, link: "https://leetcode.com/problems/sum-of-floored-pairs", name: "sum of floored pairs", tag: "Array   Math   Binary Search   Prefix Sum", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 282, link: "https://leetcode.com/problems/painting-a-grid-with-three-different-colors", name: "painting a grid with three different colors", tag: "Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 283, link: "https://leetcode.com/problems/second-minimum-time-to-reach-destination", name: "second minimum time to reach destination", tag: "Breadth-First Search   Graph   Shortest Path", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 284, link: "https://leetcode.com/problems/find-servers-that-handled-most-number-of-requests", name: "find servers that handled most number of requests", tag: "Array   Greedy   Heap (Priority Queue)   Ordered Set", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 285, link: "https://leetcode.com/problems/minimum-one-bit-operations-to-make-integers-zero", name: "minimum one bit operations to make integers zero", tag: "Dynamic Programming   Bit Manipulation   Memoization", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 286, link: "https://leetcode.com/problems/count-subtrees-with-max-distance-between-cities", name: "count subtrees with max distance between cities", tag: "Dynamic Programming   Bit Manipulation   Tree   Enumeration   Bitmask", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 287, link: "https://leetcode.com/problems/find-xor-sum-of-all-pairs-bitwise-and", name: "find xor sum of all pairs bitwise and", tag: "Array   Math   Bit Manipulation", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 288, link: "https://leetcode.com/problems/maximum-employees-to-be-invited-to-a-meeting", name: "maximum employees to be invited to a meeting", tag: "", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},        
        {index: 289, link: "https://leetcode.com/problems/find-all-good-strings", name: "find all good strings", tag: "String   Dynamic Programming   String Matching", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},        
        {index: 290, link: "https://leetcode.com/problems/smallest-good-base", name: "smallest good base", tag: "Math   Binary Search", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 291, link: "https://leetcode.com/problems/find-a-value-of-a-mysterious-function-closest-to-target", name: "find a value of a mysterious function closest to target", tag: "Array   Binary Search   Bit Manipulation   Segment Tree", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 292, link: "https://leetcode.com/problems/least-operators-to-express-number", name: "least operators to express number", tag: "Math   Dynamic Programming", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},    
        {index: 293, link: "https://leetcode.com/problems/count-pairs-with-xor-in-a-range", name: "count pairs with xor in a range", tag: "Array   Bit Manipulation   Trie", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},   
        {index: 294, link: "https://leetcode.com/problems/make-the-xor-of-all-segments-equal-to-zero", name: "make the xor of all segments equal to zero", tag: "Array   Dynamic Programming   Bit Manipulation", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 295, link: "https://leetcode.com/problems/stone-game-viii", name: "stone game viii", tag: "Array   Math   Dynamic Programming   Prefix Sum   Game Theory", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},     
        {index: 296, link: "https://leetcode.com/problems/process-restricted-friend-requests", name: "process restricted friend requests", tag: "Union Find   Graph", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 297, link: "https://leetcode.com/problems/self-crossing", name: "self crossing", tag: "Array   Math   Geometry", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 298, link: "https://leetcode.com/problems/longest-common-subpath", name: "longest common subpath", tag: "Array   Binary Search   Rolling Hash   Suffix Array   Hash Function", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
        {index: 299, link: "https://leetcode.com/problems/parallel-courses-iii", name: "parallel courses iii", tag: "Dynamic Programming   Graph   Topological Sort", difficult: "hard", isDone: false, isLock: false, rate: 0, solution: 'null', coin: 100},
    ]
]
export const available = 
[
    {difficult: 'easy' , available: `${tasks[0].filter(item => !item.isDone).length}`},
    {difficult: 'medium' , available: `${tasks[1].filter(item => !item.isDone).length}`},
    {difficult: 'hard' , available: `${tasks[2].filter(item => !item.isDone).length}`},
    {difficult: 'all' , available: `${tasks.reduce((all,current) => {return all + current.filter(item => !item.isDone).length}, 0)}`}
]
export const lockTask = 
[

]